<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: github | Tech @ Namshi.com]]></title>
  <link href="http://namshi.github.io/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://namshi.github.io/"/>
  <updated>2014-09-08T21:57:32+04:00</updated>
  <id>http://namshi.github.io/</id>
  <author>
    <name><![CDATA[Namshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Newsletter #53]]></title>
    <link href="http://namshi.github.io/blog/2014/08/28/newsletter-number-53/"/>
    <updated>2014-08-28T16:11:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/28/newsletter-number-53</id>
    <content type="html"><![CDATA[<blockquote><p><strong>BOOM!</strong> As mentioned in the last newsletter, we were working on four new open souce libraries and two of them are already out !!!</p>

<ul>
<li><p><a href="https://github.com/namshi/shisha"><strong>shisha, smoke tests made easy!</strong></a> A cool nodejs library by <a href="http://tech.namshi.com/team/#Shidhin%20CR">Shidhin</a> and <a href="http://tech.namshi.com/team/#Mohamad%20Hallal">Hallal</a> that let&rsquo;s you
write smoke tests in an easy way.</p></li>
<li><p><a href="https://github.com/namshi/node-dock"><strong>node-dock, a sweet remedy for all your docker problems!</strong></a> Another node library by <a href="http://tech.namshi.com/team/#Hossam%20Faris">Hossam</a> and <a href="http://tech.namshi.com/team/##Luciano%20Colosio">Lucio</a> that
has an handy command (dock) that plugs on top of your usual docker commands adding some sugar and some handy functionality on top of it.</p></li>
<li><p>Even <a href="http://tech.namshi.com/team/#Alessandro%20Nadalin">Alex</a> released another tiny and cool node lib called <a href="http://tech.namshi.com/blog/2014/08/22/node-file-ensure-a-small-filesystem-utility-to-make-sure-a-file-is-there/"><strong>node-file-ensure</strong>, a small filesystem utility to make sure a file is there</a></p></li>
<li><p>Lucio also wrote a post detailing his first months here at Namshi: <a href="http://tech.namshi.com/blog/2014/08/27/so-far-dot-dot-dot-so-fun/">check it out</a>!</p></li>
<li><p>Last but not least, <a href="http://tech.namshi.com/team/#Geshan%20Manandhar">Geshan</a> on his vacation back home, has improvised this talk at PHP Developers Meetup Nepal on message queues (AMQP) with RabbitMQ and Symfony <a href="http://mq-talk.herokuapp.com/">http://mq-talk.herokuapp.com/</a></p></li>
</ul>
</blockquote>

<p>And here we are as usual with a list of interesting links to keep you busy during the upcoming weekend:</p>

<ul>
<li><p><a href="https://github.com/OptimalBits/redbird">A modern reverse proxy for node</a></p></li>
<li><p><a href="http://buff.ly/1nEYH2M">Open Source ain’t Charity</a></p></li>
<li><p><a href="https://speakerdeck.com/patrickhamann/ship-it-re-develop-conference-august-2014">Ship it! A story of continuous delivery at theguardian.com</a></p></li>
<li><p><a href="https://www.gov.uk/service-manual/agile/running-retrospectives.html">Reviewing a team&rsquo;s work and the way it is done at Gov.uk Design Services</a></p></li>
<li><p><a href="http://buff.ly/1wDTrGe">Plain Old #JavaScript Object Visualization</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://t.co/eDh0CeQYpA">Stop whatever you are doing and look at p6 of this paper</a></p></li>
<li><p><a href="http://buff.ly/1lrfCus">Rocket Internet co-founder sees venture take off in Middle East</a></p></li>
<li><p><a href="http://buff.ly/1q9KvDq">V8&rsquo;s memory mysteries</a></p></li>
<li><p><a href="http://buff.ly/1sh7Lhn">49ers’ stadium Wi-Fi served 25,000 concurrent users, 2.13TB in all</a></p></li>
<li><p><a href="http://buff.ly/1mA3a6D">Software Developers and Asperger&rsquo;s Syndrome</a></p></li>
<li><p><a href="http://buff.ly/1v8pUmg">Docker Service Discovery Using Etcd and Haproxy</a></p></li>
<li><p><a href="http://buff.ly/1tqNB7a">Stellar: Fast database snapshot and restore tool for development</a></p></li>
<li><p><a href="http://buff.ly/1seRoll">Javascript optimization killers</a></p></li>
<li><p><a href="http://buff.ly/1mz2vlT">How I Hacked My Husband&rsquo;s Programming Addiction</a></p></li>
<li><p><a href="http://mq-talk.herokuapp.com/#/14">programmming mantras to remember</a></p></li>
<li><p><a href="http://buff.ly/1myYCxx">Facebook Unveils Its Load-Balancing System: Autoscale</a></p></li>
<li><p><a href="http://buff.ly/1wiCeln">Docker 1.2.0, with restart policies</a></p></li>
<li><p><a href="http://buff.ly/1lmw8vT">Semantic Versioning Is Not the Solution</a></p></li>
<li><p><a href="http://buff.ly/1mtjtSS">The Plague of Methods and Frameworks</a></p></li>
<li><p><a href="http://buff.ly/1s2pxot">Evolution of Docker and Its Impact on AWS &ndash; i build the cloud</a></p></li>
<li><p><a href="http://buff.ly/1s2p4Cu">Uber opens up its API – and creates a new platform</a></p></li>
<li><p><a href="https://www.glasswire.com">GlassWire Network Security Monitor &amp; Firewall Tool</a></p></li>
<li><p><a href="https://netguru.co/blog/posts/procrastination-and-overcoming-programmers-block">Procrastination and Overcoming Programmer&rsquo;s Block</a></p></li>
<li><p><a href="http://algorithm.dk/posts/rtfm-0day-in-ios-apps-g-gmail-fb-messenger-etc">RTFM 0day in iOS apps: G+, Gmail, FB Messenger</a></p></li>
<li><p><a href="http://www.codefights.com">CodeFights &ndash; Become a Code Champion</a></p></li>
<li><p><a href="http://hoa-project.net/En/">Hoa project, a cool set of PHP lib (they deserve more community involvement &ndash; i.e. tests are missing, own standards)</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/bubblejs-a-16k-solution-to-a-common-problem--cms-21986">Bubble.js: A 1.6K Solution to a Common Problem</a></p></li>
<li><p><a href="http://knplabs.com/blog/2011/05/17/agile-nodejs/">We love Symfony2… but we also love Agility and Node.js</a></p></li>
<li><p><a href="http://www.codeproject.com/Articles/604417/Agile-software-development-methodologies-and-how-t">Agile software development methodologies and how to apply them</a></p></li>
<li><p><a href="http://lafikl.github.io/perfBar/">website performance metrics</a></p></li>
<li><p><a href="https://github.com/OptimalBits/redbird">A modern reverse proxy for node</a></p></li>
<li><p><a href="http://mobileangularui.com/">Mobile Angular UI</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #52]]></title>
    <link href="http://namshi.github.io/blog/2014/08/21/newsletter-number-52/"/>
    <updated>2014-08-21T12:37:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/21/newsletter-number-52</id>
    <content type="html"><![CDATA[<blockquote><p>As you know the IT team loves opensource and the idea <a href="http://github.com/namshi">to give back to the &ldquo;community&rdquo;</a>! <br />
That&rsquo;s why on Tuesday evening we did an internal hackathon, we bootstrapped four open source projects that we are going to release soon, <br /> stay tuned!<br />
<a href="http://tech.namshi.com/team/#Luciano%20Colosio">Lucio</a>, our Nodejs maniac, introduced the team to node&rsquo;s history:</p></blockquote>

<p><img class="center" src="/images/posts/lucio-node-presentation.png" width="800" title="result" ></p>

<p>Below the usual list of interesting links we found this week:</p>

<ul>
<li><p><a href="http://buff.ly/1z2jZga">On Sexual Harassment in the Tech Industry</a></p></li>
<li><p><a href="http://buff.ly/1pYrQJF">Promoting Symfony: One step at a time</a></p></li>
<li><p><a href="http://buff.ly/YsjYqC">Token-base AngularJS auth</a></p></li>
<li><p><a href="http://buff.ly/1vZZGUm">Welcoming the Orchard and Fig team in Docker</a></p></li>
<li><p><a href="http://buff.ly/1ptfB8L">HTTP Shaming</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://elnur.pro/symfony-without-bundles/">Symfony without bundles, an interesting approach</a></p></li>
<li><p><a href="http://labs.qandidate.com/blog/2014/08/18/a-new-feature-toggling-library-for-php/">A new feature toggling library for PHP</a></p></li>
<li><p><a href="http://buff.ly/1psgj62">Understanding process.nextTick() &ndash; How To Node</a></p></li>
<li><p><a href="http://gwendall.github.io/way/">Way.JS: Simple, lightweight, persistent two-way databinding</a></p></li>
<li><p><a href="http://bjorn.tipling.com/state-and-regular-expressions-in-javascript">What you should know about JavaScript regular expressions</a></p></li>
<li><p><a href="http://fdietz.github.io/recipes-with-angular-js/">Recipes with Angular.js</a></p></li>
<li><p><a href="https://github.com/krakjoe/pthreads">Threading for PHP &ndash; Share Nothing, Do Everything :)</a></p></li>
<li><p><a href="https://github.com/propelorm/Propel2">Propel2 (ORM) for PHP 5.4</a></p></li>
<li><p><a href="http://taskjs.org/">generators + promises = tasks</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #39]]></title>
    <link href="http://namshi.github.io/blog/2014/05/22/newsletter-number-39/"/>
    <updated>2014-05-22T11:34:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/05/22/newsletter-number-39</id>
    <content type="html"><![CDATA[<p>&hellip;another <strong>TechThursday</strong> here!</p>

<ul>
<li><p><a href="http://www.slideshare.net/odino/dont-screw-it-up-how-to-build-durable-web-apis-phpday-2014-in-verona-ita">Presentation we gave at the PHPDay</a></p></li>
<li><p><a href="https://speakerdeck.com/gillesruppert/angularjs-the-good-the-bad-and-the-ugly">AngularJS: the Good, the Bad and the Ugly. Slides from jsDay</a></p></li>
<li><p><a href="http://verraes.net/2014/03/practical-event-sourcing/">Practical Event Sourcing</a></p></li>
<li><p><a href="http://diginomica.com/2014/05/07/asos-cio-talks-nightmare-aligning-technology-business">Asos: aligning technology with business</a></p></li>
<li><p><a href="https://github.com/substack/browserify-handbook">Building modular applications with browserify</a></p></li>
<li><p><a href="http://vimeo.com/63022489">Tutorial &ndash; Creating a Poll application in 15 minutes with Phalcon &lsquo;The fastest PHP framework&rsquo;</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/an-introduction-to-the-device-orientation-api--cms-21067">An Introduction to the Device Orientation API</a></p></li>
<li><p><a href="https://laracasts.com/lessons/gulp-this">Gulp this &ndash; a quick video to get started with Gulp</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://learn.ionicframework.com/">Start learning Ionic for mobile app development</a></p></li>
<li><p><a href="http://www.oodesign.com/design-principles.html">Some good software design principles</a></p></li>
<li><p><a href="http://hub.github.com/">Github access from command line</a></p></li>
<li><p><a href="http://www.jamesshore.com/Blog/How-Does-TDD-Affect-Design.html">How does TDD affect design</a></p></li>
<li><p><a href="http://erikaheidi.com/blog/setting-up-a-development-machine-with-ubuntu-1404-trusty-tahr">Setting up a development machine with Ubuntu 14.04 (Trusty Tahr)</a></p></li>
<li><p><a href="https://forge.laravel.com/">Instant PHP Platforms on Linode, DigitalOcean, AWS, &amp; Rackspace</a></p></li>
<li><p><a href="http://gethoneybadger.com/">A presonal look at websites</a></p></li>
<li><p><a href="http://blog.makandra.com/2010/04/the-greatest-bug-i-never-fixed/">The greatest bug I never fixed</a></p></li>
<li><p><a href="https://github.com/micahflee/onionshare">Share large files based on Tor</a></p></li>
<li><p><a href="http://jacquesmattheij.com/choosing-web-framework-language-combo">Choosing a Web Frameword/Language Combo for the Next Decade</a></p></li>
<li><p><a href="https://storify.com/1Marc/polymer-web-components-will-replace-angular-direct/">Future of AngularJS: Polymer/ Web components might replace directives</a></p></li>
<li><p><a href="http://gent.ilcore.com/2011/03/how-not-to-trigger-layout-in-webkit.html">Improving rendering performance of webpages &ndash; reducing layout triggers</a></p></li>
<li><p><a href="http://www.frontendjournal.com/javascript-es6-learn-important-features-in-a-few-minutes/">Learning the 6 important features of ES6 in few minutes</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git and Github at Namshi: our flow and tips&tricks]]></title>
    <link href="http://namshi.github.io/blog/2014/05/04/git-tips-and-tricks/"/>
    <updated>2014-05-04T20:38:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/05/04/git-tips-and-tricks</id>
    <content type="html"><![CDATA[<p>At <a href="https://www.namshi.com">Namshi</a> for versioning and managing our large and assorted codebase we use <a href="http://git-scm.com/">GIT</a> and of course <a href="http://github.com/namshi">Github</a> (I like to call it &ldquo;Facebook for nerds&rdquo;).</p>

<p>In the true spirit of &ldquo;giving back to the community&rdquo; we also publicly release some libraries that we use internally, <a href="https://github.com/namshi/NamshiUtilityBundle">feel</a> <a href="https://github.com/namshi/utils">free</a> <a href="https://github.com/namshi/notificator">to</a> <a href="https://github.com/namshi/jose">use</a> <a href="https://github.com/namshi/ng-watchers">them</a> <a href="https://github.com/namshi/emailvision">and</a> <a href="https://github.com/namshi">contribute!</a></p>

<!-- more -->


<h3>Our GIT flow</h3>

<p>Git is so powerful and flexible that at the beginning you feel kinda lost: <em>&ldquo;How should I use it?&rdquo;</em>  <em>&ldquo;Should I use merge or rebase?&rdquo;</em>  <em>&ldquo;master, develop, release branches?&rdquo;</em>
And then you try to find the answer via google and you find the solution: <a href="http://nvie.com/posts/a-successful-git-branching-model/">&ldquo;GIT FLOW!&rdquo;</a>.</p>

<blockquote><p>No, no, and again <strong>NO!</strong> (please say it out loud).</p></blockquote>

<p>&ldquo;Git flow&rdquo; is one of several ways to use git, but it&rsquo;s not a standard and it could not fit well in your current organisation/codebase/team flow.</p>

<p>You should embrace the power of git, and find a tailor-made solution.</p>

<p>At Namshi we basically have two main branches: master and develop.</p>

<p>On master you have, exactly, what&rsquo;s running on production, while develop is our development branch (surprisingly).</p>

<p>When we pick a task we usually create a branch from develop. Once we are done with a task we rebase our feature branch from develop, in order to be sure that the new
code works and doesn&rsquo;t break anything before being merged in develop. Then we open a pull request (PR) on Github. Once the PR is reviewed and approved
it gets merged in the develop branch.
There is (still) a lot of discussion (and flames) about using the rebase command, because basically it rewrites the current commits history.
It&rsquo;s true that potentially you can screw your codebase, but we are still safe because you can still rely on your teammates local repositories and
gain from the integrity, stability (before merging on the develop branch you can be sure that you didn&rsquo;t break anything) and clean commits history point of view.</p>

<p>Once we decide that we can ship new stuff, we create a new branch (usually a release branch), tag it, deploy on staging and then deploy on live.
Then we merge the tag on master (with the <a href="https://www.kernel.org/pub/software/scm/git/docs/git-merge.html">&mdash;no-ff option</a> and rebase develop with master.
Even here we use the rebase command because we end up with develop that has the same commits sequence as master plus new commits: it&rsquo;s so easy to spot the differences between the two branches.</p>

<h3>Git Config</h3>

<p>There are several configuration settings that you can put in your <code>~/.gitconfig</code> file and get a lot of benefits on your daily git usage.</p>

<h4>colors</h4>

<p>Give some love to git outputs:</p>

<p><code>
git config --global color.ui true
</code></p>

<h4>filemode</h4>

<p>Tired of having weird a <code>git status</code> output because some files has just changed file permissions?
<code>
git config --global core.filemode false
</code></p>

<h4>rerere</h4>

<p>The git rerere functionality stands for <em>&ldquo;reuse recorded resolution&rdquo;</em> and as the name implies, it allows you to ask git to remember how you&rsquo;ve resolved a knotty conflict so that the next time you have the same conflict, git can automatically resolve it for you.
<code>
git config --global rerere.enabled true
</code></p>

<h4>global exclude</h4>

<p>Instead of setting common files to be ignored in your local .gitignore file (i.e. your IDE config file, .DS_Store etc) everytime, you can use a global ignore file
that will automatically apply to all your repos.
<code>
git config --global core.excludesfile ~/.gitignore
</code>
<strong>tip:</strong> I have a <code>my_temp</code> entry in my .gitignore global file, so that I can create a <code>my_temp</code> dir in my working copies and be free to put any experimental and temporary code/quick testing code
in it without changing the project on my IDE and using the actual codebase.</p>

<h4>pull with rebase, not merge</h4>

<p>Everytime we pull from a remote repository, we do a <code>git pull --rebase</code> because we don&rsquo;t want to mess up with our local commits.
Instead of specifying it everytime, you can make it the default beaviour when you pull:
<code>
git config --global branch.auto-setuprebase always
</code></p>

<h4>autocorrect</h4>

<p>Git can autocorrect you:</p>

<p><code>
git config --global help.autocorrect true
</code></p>

<p>```
➜  namshi.github.com git:(source) ✗ git cmmit
git: &lsquo;cmmit&rsquo; is not a git command. See &lsquo;git &mdash;help&rsquo;.</p>

<p>Did you mean this?</p>

<pre><code>commit
</code></pre>

<p>```</p>

<h4>default tracking</h4>

<p>Bored of setting up branch tracking by hand?
<code>
git config --global push.default upstream
</code></p>

<h3>Git aliases</h3>

<p>Git supports aliases via the <code>git config --global alias.&lt;alias_name&gt; "&lt;git command&gt;"</code>, but here in Namshi we tend to use the shell aliases
because you can save even more chars and git is the only revision control and source code management system we use.</p>

<h4>checkout</h4>

<p><code>
alias ck='git checkout'
</code></p>

<h4>checkout branch develop</h4>

<p><code>
alias dev='git checkout develop'
</code></p>

<h4>checkout branch master</h4>

<p><code>
alias master='git checkout master'
</code></p>

<h4>create a new branch</h4>

<p><code>
alias ckb='git checkout -b'
</code></p>

<h4>push</h4>

<p><code>
alias push='git push'
</code></p>

<h4>force push after a rebase</h4>

<p><code>
alias pushf='git push -f'
</code></p>

<h4>pull</h4>

<p><code>
alias pull='git pull'
</code></p>

<h4>sync main branches</h4>

<p><code>
alias align='git pull --rebase origin master &amp;&amp; git pull --rebase origin develop'
</code></p>

<h4>fetch</h4>

<p><code>
alias fetch='git fetch'
</code></p>

<h4>commit</h4>

<p><code>
alias ci='git commit'
</code></p>

<h4>tag</h4>

<p><code>
alias tag='git tag'
</code></p>

<h4>revert all changes</h4>

<p><code>
alias undo='git reset --hard HEAD'
</code></p>

<h4>delete merged branch</h4>

<p>How many times do you have so many branches in your local repo that are already merged?
Let&rsquo;s get rid of them!
<code>
alias dmb='git branch --merged | xargs git branch -d'
</code></p>

<h4>log</h4>

<p><code>
alias glog='git log --oneline --decorate'
</code></p>

<h4>status</h4>

<p>A shorter version:
<code>
alias st='git status -sb'
</code></p>

<h4>diff</h4>

<p>This only highlights the changed words, nicely inline.
<code>
alias gdiff='git diff --word-diff'
</code></p>

<h3>Tips</h3>

<ul>
<li>You messed up with a merge/rebase? Don&rsquo;t freak out, just use <code>git reflog</code> to check the local history command and sha1, and then <code>git reset --hard &lt;sha1&gt;</code></li>
<li>After rebasing develop in your feature branch you end up with too many conflicts and messed up commits history? Don&rsquo;t panic, create a new feature branch from develop and
<code>git cherry-pick</code> all the commits you need from your previous feature branch.</li>
<li>Is my commit already on branch X? <code>git branch --contains &lt;sha1&gt;</code> is there to rescue you!</li>
<li>You want to fetch a file from another branch without changing your current branch? <code>git checkout &lt;other_branch_name&gt; -- path/to/file</code></li>
</ul>


<p> Here you can find a complete list of <a href="https://gist.github.com/cirpo/86d43ef8ef87b4cfd031">aliases</a>, and <a href="https://gist.github.com/cirpo/343376f1ac7fb00204a0">here</a> the global .gitconfig we are using</p>

<p> Do you have any other tips or tricks to share? Write them down in the comments :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #30]]></title>
    <link href="http://namshi.github.io/blog/2014/03/20/newsletter-number-30/"/>
    <updated>2014-03-20T17:59:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/03/20/newsletter-number-30</id>
    <content type="html"><![CDATA[<p><a href="/blog/categories/techthursday/">#TechThursday</a>! Here are some interesting news!</p>

<ul>
<li><p><a href="http://lab.arc90.com/2012/04/03/git-sweep/">Git-sweep</a>: A command-line tool that helps you clean up Git branches that have been merged into master</p></li>
<li><p><a href="https://git.kernel.org/cgit/git/git.git/tree/Documentation/RelNotes/2.0.0.txt">GIT 2.0 released!</a></p></li>
<li><p><a href="http://dillinger.io/">wysiwyg for markdown</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/introduction-to-the-mean-stack--cms-19918">JavaScript: Introduction to the MEAN Stack</a></p></li>
<li><p><a href="http://blog.codeship.io/2013/10/31/unit-testing-best-practices-in-angularjs.html">Unit Testing Best Practices in AngularJS</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="https://github.com/rupa/z">Z, tracks your most used directories in your shell, based on &lsquo;frecency&rsquo;</a></p></li>
<li><p><a href="http://hczhcz.github.io/Flappy-2048/">Flappy 2048</a></p></li>
<li><p><a href="https://github.com/showcases">Github showcases</a></p></li>
<li><p><a href="http://www.slideshare.net/emadb/wroclove-rb">From ActiveRecord to Events</a></p></li>
<li><p><a href="https://www.youtube.com/watch?v=R8W_6xWphtw">Fluent 2014 Paul Irish, about what&rsquo;s behind a simple HTTP request for a page</a></p></li>
<li><p><a href="http://www.youtube.com/watch?v=aZqhRICne_M">Fluent 2014 Brendan Eich, &ldquo;JavaScript Taking Both the High and Low Roads&rdquo;</a></p></li>
<li><p><a href="http://www.youtube.com/watch?v=WQZio5DlSXM">Redefining a function as you debug it in Chrome DevTools</a></p></li>
<li><p><a href="http://www.uvm.edu/~cdanfort/csc-reading-group/lazer-flu-science-2014.pdf">BIG DATA: The Parable of Google Flu</a></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
