<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tech @ Namshi.com]]></title>
  <link href="http://namshi.github.io/atom.xml" rel="self"/>
  <link href="http://namshi.github.io/"/>
  <updated>2014-09-04T12:01:55+04:00</updated>
  <id>http://namshi.github.io/</id>
  <author>
    <name><![CDATA[Namshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Newsletter #54]]></title>
    <link href="http://namshi.github.io/blog/2014/09/04/newsletter-number-54/"/>
    <updated>2014-09-04T11:17:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/09/04/newsletter-number-54</id>
    <content type="html"><![CDATA[<p>It&rsquo;s <a href="http://namshi.github.io/blog/categories/techthursday/">TechThursday</a> again!</p>

<blockquote><p>Big news, in case you missed it: we&rsquo;re going public!</p>

<p><a href="http://kinnevik.se/en/Media/Press-releases/Kinnevik-and-Rocket-Internet-to-create-global-fashion-e-commerce-group/">http://kinnevik.se/en/Media/Press-releases/Kinnevik-and-Rocket-Internet-to-create-global-fashion-e-commerce-group/</a></p></blockquote>

<p>This week we&rsquo;ve been quite busy, in fact we announced
that <a href="http://namshi.github.io/blog/2014/08/31/welcome-daniel/">Daniel is joining us</a> and
we took the time to talk about how we <a href="http://namshi.github.io/blog/2014/09/02/innovate-payment-gate-way-library/">process payments</a>
and how we&rsquo;ve been trying to shift more to a
<a href="http://namshi.github.io/blog/2014/09/01/5-devops-practices-you-should-consider-starting-today/">devops-ish culture</a> &mdash; long road ahead though!</p>

<p>Last but not least, we also wrote an article explaining
<a href="http://namshi.github.io/blog/2014/08/31/php-generators-explained/">generators in PHP</a>
for whoever has missed them so far!</p>

<p>But what has the team been looking at over the past week? Below
you&rsquo;ll find the usual list of interesting articles we discovered
in the past 7 days.</p>

<!-- more -->


<ul>
<li><a href="http://buff.ly/1xbWXrt">JoliCI: run your CI builds locally, through docker</a></li>
<li><a href="http://buff.ly/1nWsdBi">Design how your objects talk through mocking</a></li>
<li><a href="http://buff.ly/Y9oaM6">HHVM Long Term Support</a></li>
<li><a href="http://buff.ly/1nmUssN">Configuring Redis High Availability</a></li>
<li><a href="http://speakingjs.com/">Another awesome book on JavaScript</a></li>
<li><a href="http://duojs.org/">Next generation package manager for the front-end</a></li>
<li><a href="http://tc39wiki.calculist.org/es6/">Redesigned TC39 ES6 Features</a></li>
<li><a href="https://github.com/medikoo/es6-symbol">ES-6 symbols shims for node</a></li>
<li><a href="https://github.com/reactphp/vagrant">React Vagrant</a></li>
<li><a href="http://code.tutsplus.com/series/working-with-symfony-2--cms-636">Working with Symfony 2</a></li>
<li><a href="http://arstechnica.com/information-technology/2014/08/is-there-a-benefit-to-compiling-your-code-as-you-go/">Is there a benefit to compiling your code as you go?</a></li>
<li><a href="https://gist.github.com/mathisonian/c325dbe02ea4d6880c4e">requiring npm modules in the browser console</a></li>
<li><a href="http://perf.fail/">perf.fail &ndash; do, learn, fail forward.</a></li>
<li><a href="http://samlambert.com/posts/how-we-work-on-queries-at-gitHub/">How we work on queries at github</a></li>
<li><a href="http://blog.flux7.com/benchmarking-analyzing-aws-m3-instances-for-performance-bandwidth">Benchmarking: Analyzing AWS m3 Instances for Performance, Bandwidth</a></li>
<li><a href="http://opensource.com/business/14/9/security-for-docker">Bringing new security features to Docker</a></li>
<li><a href="http://www.drdobbs.com/architecture-and-design/containers-for-development/240168801">Containers for Development</a></li>
<li><a href="http://www.davidmkerr.com/2014/08/dockerfile-golf-or-optimizing-docker.html">Dockerfile Golf (or optimizing the Docker build process) </a></li>
<li><a href="http://blog.ezyang.com/2014/08/the-fundamental-problem-of-programming-language-package-management/">The fundamental problem of programming language package management</a></li>
<li><a href="http://softwaredefinedtalk.com/">SoftwareDefinedTalk</a></li>
<li><a href="http://techblog.netflix.com/2014/08/announcing-scumblr-and-sketchy-search.html">Scumblr is an interesting tool for keeping an eye on potential exploits or discussions of your company/application elsewhere on the internet. All sorts of potential monitoring applications for this: https://github.com/netflix/scumblr</a></li>
<li><a href="https://github.com/spotify/helios">Helios is another docker orchestration platform designed for managing containers across a large fleet. Instructive documentation, debian packages and a vagrant setup for trying it out are all plus points</a></li>
<li><a href="https://github.com/ConradIrwin/aws-name-server">DNS server that lets you look up ec2 instances by instance name</a></li>
<li><a href="https://www.skylight.io/">Skylight is a smart profiler data detective code whisperer bug catcher flag raiser for rails apps</a></li>
<li><a href="http://www.liquibase.org/">Liquibase:&ndash; Source control for your database</a></li>
<li><a href="http://dweet.io/">dweet.io: Ridiculously simple messaging (and alerts) for the Internet of Things</a></li>
<li><a href="https://github.com/slap-editor/slap">Slap: Sublime-like terminal-based text editor</a></li>
<li><a href="http://pre-commit.com/">Pre-commit:&ndash;  A framework for managing and maintaining multi-language pre-commit hooks</a></li>
<li><a href="http://www.youtube.com/watch?v=aQipuiTcn3U">Julie Ralph (from Google) talks about End to End Angular Testing with Protractor</a></li>
<li><a href="http://www.appcelerator.com/blog/2012/05/comparing-titanium-and-phonegap/">Comparing Titanium and PhoneGap (Mobile app development)</a></li>
<li><a href="http://maurizzzio.github.io/PojoViz/public/vulcanize.htm">PojoViz &ndash; Plain Old JavaScript Object Visualization</a></li>
<li><a href="https://github.com/newrelic/centurion/">A mass deployment tool for Docker fleets</a></li>
<li><a href="https://github.com/josephyzhou/github-trending">Tracking the most popular Github repos, updated daily</a></li>
<li><a href="http://devops.com/blogs/specialists-vs-generalists-enterprise-devops/">Specialists vs. Generalists for Enterprise DevOps</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Innovate Payment Gateway Library]]></title>
    <link href="http://namshi.github.io/blog/2014/09/02/innovate-payment-gate-way-library/"/>
    <updated>2014-09-02T19:23:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/09/02/innovate-payment-gate-way-library</id>
    <content type="html"><![CDATA[<p>In the tech <a href="https://namshi.com">Namshi</a> team, as you probably know, we fully support the open source movement,
that&rsquo;s why we try to release open source software as soon as we can, in the full &ldquo;give back to the community&rdquo; mindset.
You can check all our project on <a href="http://github.com/namshi">github</a></p>

<p>Lots of e-commerce companies and service providers have online payments for their
customers. So do we.</p>

<p>Our weapon of choice, apart from PayPal, to carry out payments is: <a href="http://www.innovatepayments.com">Innovate.</a>
That&rsquo;s why we developed and released the <a href="https://github.com/namshi/innovate">Innovate library</a>, written in PHP.</p>

<p><a href="http://www.innovatepayments.com">Innovate</a> payment gateway accepts all types of credit card payments.</p>

<!-- more -->


<h2>Installation</h2>

<p>You can easily integrate the Innovate library in your project via <a href="https://getcomposer.org">composer</a>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>composer install namshi/innovate</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://namshi.github.io/images/posts/cards.png" title="payment cards" ></p>

<h2>Usage</h2>

<p>Using this library is easy, here is what you need:</p>

<ul>
<li>initialize the Innovate client</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Namshi\Innovate\Payment\Transaction</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Namshi\Innovate\Payment\BillingInformation</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Namshi\Innovate\Payment\Browser</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Namshi\Innovate\Payment\Billing\Customer</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Namshi\Innovate\Payment\Billing\Address</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Namshi\Innovate\Payment\Card</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Namshi\Innovate\Client</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$client</span>      <span class="o">=</span> <span class="k">new</span> <span class="nx">Client</span><span class="p">(</span><span class="nv">$storeId</span><span class="p">,</span> <span class="nv">$authenticationKey</span><span class="p">);</span> <span class="c1">// retrieve them from your Innovate account</span>
</span><span class='line'><span class="nv">$transaction</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Transaction</span><span class="p">(</span><span class="s1">&#39;sale&#39;</span><span class="p">,</span> <span class="s1">&#39;ecom&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="s1">&#39;ORDER_NUMBER&#39;</span><span class="p">,</span> <span class="s1">&#39;DESCRIPTION&#39;</span><span class="p">,</span> <span class="s1">&#39;USD&#39;</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="s1">&#39;AN OPTIONAL REFERENCE TO YOUR TRANSACTION&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$card</span>        <span class="o">=</span> <span class="k">new</span> <span class="nx">Card</span><span class="p">(</span><span class="s1">&#39;1234123412341234&#39;</span><span class="p">,</span> <span class="s1">&#39;111&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="nv">$cardExpiryDate</span><span class="p">));</span>
</span><span class='line'><span class="nv">$customer</span>    <span class="o">=</span> <span class="k">new</span> <span class="nx">Customer</span><span class="p">(</span><span class="s1">&#39;Mr&#39;</span><span class="p">,</span> <span class="s1">&#39;John&#39;</span><span class="p">,</span> <span class="s1">&#39;Doe&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$address</span>     <span class="o">=</span> <span class="k">new</span> <span class="nx">Address</span><span class="p">(</span><span class="s1">&#39;My address info 1&#39;</span><span class="p">,</span> <span class="s1">&#39;My address info 2&#39;</span><span class="p">,</span> <span class="s1">&#39;My address info 3&#39;</span><span class="p">,</span> <span class="s1">&#39;San Francisco&#39;</span><span class="p">,</span> <span class="s1">&#39;California&#39;</span><span class="p">,</span> <span class="s1">&#39;US&#39;</span><span class="p">,</span> <span class="s1">&#39;00000&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$billing</span>     <span class="o">=</span> <span class="k">new</span> <span class="nx">BillingInformation</span><span class="p">(</span><span class="nv">$customer</span><span class="p">,</span> <span class="nv">$address</span><span class="p">,</span> <span class="s2">&quot;customers&#39;s-email@gmail.com&quot;</span><span class="p">,</span> <span class="nv">$customerIpAddress</span><span class="p">);</span>
</span><span class='line'><span class="nv">$browser</span>     <span class="o">=</span> <span class="k">new</span> <span class="nx">Browser</span><span class="p">(</span><span class="nv">$customUserAgent</span><span class="p">,</span> <span class="nv">$requestAcceptHeader</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>We used OOP to cover all the data we need to send to Innovate:</p>

<p><code>$client</code> is a model that contains the Innovate account info.</p>

<p><code>$transaction</code> represents a detailed transaction where we pass as many arguments as Innovate needs.</p>

<p><code>$card</code> represents the required card details to perform the payment.</p>

<p><code>$customer</code> represents the customer details.</p>

<p><code>$address</code> represents the customer address details.</p>

<p><code>$billing</code> represents the customer billing address and contact details.</p>

<p><code>$browser</code> represents detailed browser info, including the User-Agent.</p>

<p><code>$customUserAgent</code> is the browser user agent header.</p>

<p><code>$requestAcceptHeader</code> is the browser accept header.</p>

<h2>How It Works</h2>

<p>To perform the payment you need to create a request to <a href="http://www.innovatepayments.com">Innovate</a> and pass the previous created objects:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">performPayment</span><span class="p">(</span><span class="nv">$transaction</span><span class="p">,</span> <span class="nv">$card</span><span class="p">,</span> <span class="nv">$billing</span><span class="p">,</span> <span class="nv">$browser</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>You will then get one of the following responses:</p>

<ul>
<li><h2>Normal transaction</h2>

<p>A normal transaction follows a very simple flow: It just requires authentication through Innovate, and the library then performs the payment.</p></li>
<li><h2>3D secure transactions</h2>

<p>A <a href="http://en.wikipedia.org/wiki/3-D_Secure">3-D_Secure</a> transaction requires two requests to Innovate and one request for 3D Secure in order
to add an additional security layer while performing the payment.
The first request is already sent to Innovate and if it is 3D Secure transaction you will need to redirect the user to the concerned party
(primarily, the bank) to confirm the payment.</p></li>
</ul>


<p>After that the process continues by sending another request to Innovate containing the extra validation values.</p>

<p>You can easily distinguish between the two possible types of payments, 3D Secure and Normal, by looking at the type of Innovate response received:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="k">use</span> <span class="nx">Namshi\Innovate\Http\Response\Redirect</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">performPayment</span><span class="p">(</span><span class="nv">$transaction</span><span class="p">,</span> <span class="nv">$card</span><span class="p">,</span> <span class="nv">$billing</span><span class="p">,</span> <span class="nv">$browser</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nv">$response</span> <span class="nx">instanceOf</span> <span class="nx">Redirect</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 3D secure transactions</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Normal transactions</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In case of normal Transactions, the library will perform the payment directly.
In case of 3D Secure transactions you need to send another request
with more details (related to the third security party) as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Namshi\Innovate\Http\Response\Redirect</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nv">$response</span> <span class="nx">instanceof</span> <span class="nx">Redirect</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// build a form</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The response object contains the values (&lsquo;targetUrl&rsquo;, &lsquo;session&rsquo;, &lsquo;paReq&rsquo;) which are needed to build the form:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$targetUrl</span>  <span class="o">=</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getTargetUrl</span><span class="p">();</span>
</span><span class='line'><span class="nv">$session</span>    <span class="o">=</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getSession</span><span class="p">();</span>
</span><span class='line'><span class="nv">$pareq</span>      <span class="o">=</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getPareq</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then, the receiving the previous values will be used to build a form as hidden values.
The form will be sent to the <code>$targetUrl</code> which is the 3D-secure service page as the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">&quot;acsform&quot;</span> <span class="na">action=</span><span class="s">&quot;[targetUrl from the response]&quot;</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;PaReq&quot;</span> <span class="na">value=</span><span class="s">&quot;[The pareq data from response]&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;MD&quot;</span> <span class="na">value=</span><span class="s">&quot;[Any value can be stored here which will be sent back unchanged in the the 3d secure response e.g to preserve the session id which we can send back to complete the transaction]&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;TermUrl&quot;</span> <span class="na">value=</span><span class="s">&quot;[return URL on your site]&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;noscript&gt;</span>
</span><span class='line'>        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;Submit&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/noscript&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>termUrl</code>: the URL that we need to direct the user to, after the user submits the form.</p>

<p>See an example of an ACS (Access Control Server) Form</p>

<p>We need to submit the form with Javascript:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">autosub</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">forms</span><span class="p">[</span><span class="s1">&#39;acsform&#39;</span><span class="p">].</span><span class="nx">submit</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">autosub</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>After the form is submitted, the user is redirected to a 3D Secure page which asks for extra credentials.
Once the user submits the 3D Secure form, he/she gets redirected to the &lsquo;termUrl&rsquo; page with two hidden values
(&lsquo;PaRes&rsquo;, &lsquo;MD&rsquo;) which are used to create the final request to Innovate:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$extraData</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;PaRes&#39;</span>     <span class="o">=&gt;</span> <span class="s1">&#39;Authentication response&#39;</span><span class="p">,</span> <span class="c1">// we get this value from hidden fields after redirection to termUrl</span>
</span><span class='line'>    <span class="s1">&#39;session&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;MD&#39;</span><span class="p">,</span> <span class="c1">// we get this value from hidden fields after redirection to termUrl</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$finalResponse</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">(</span><span class="nv">$client</span><span class="o">-&gt;</span><span class="na">createRemoteRequest</span><span class="p">(</span><span class="s1">&#39;POST&#39;</span><span class="p">,</span> <span class="nx">Client</span><span class="o">::</span><span class="na">INNOVATE_URL</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="nv">$extraData</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then we get the final response which can be checked for payment status &ndash; success or denied:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="mi">200</span> <span class="o">===</span> <span class="nv">$finalResponse</span><span class="o">-&gt;</span><span class="na">getStatusCode</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// payment done</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// authentication failed</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Tests</h2>

<p>We added two types of tests; to run them you need to install the dev dependencies using composer and then run
the test using <a href="http://phpunit.de">PHPUnit</a></p>

<ul>
<li><h3>Functional Test:</h3>

<p>These test the library functionality without sending any real request to Innovate, just hit this on your terminal:</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">phpunit</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><h3>integration Test</h3>

<p>There are a couple of integration tests that verify that the library works flawlessly by creating
real requests to the Innovate payment gateway. Just use valid test credentials, then create a file
called .innovate.config in the project directory with four parameters:</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$configs</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;storeId&#39;</span>           <span class="o">=&gt;</span> <span class="s1">&#39;xxxxx&#39;</span><span class="p">,</span> <span class="c1">//store Id in Innovate</span>
</span><span class='line'>    <span class="s1">&#39;authenticationKey&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;xxxxxxxxxxx&#39;</span><span class="p">,</span> <span class="c1">//authentication key</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Card info</span>
</span><span class='line'><span class="nv">$cardInfo</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;number&#39;</span>    <span class="o">=&gt;</span> <span class="s1">&#39;xxxxxxxxxxxx&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;cvv&#39;</span>       <span class="o">=&gt;</span> <span class="s1">&#39;XXX&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// The card which need redirection for 3d secured</span>
</span><span class='line'><span class="nv">$redirectUrlCardInfo</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;number&#39;</span>    <span class="o">=&gt;</span> <span class="s1">&#39;xxxxxxxxxxxx&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;cvv&#39;</span>       <span class="o">=&gt;</span> <span class="s1">&#39;XXX&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// your ip, it should be in Innovate white list</span>
</span><span class='line'><span class="nv">$ip</span> <span class="o">=</span> <span class="s1">&#39;xxx.xxx.xxx.xxx&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>After the setup, just run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">phpunit tests/Namshi/Innovate/Test/Integration/ServiceTest.php</span>
</span></code></pre></td></tr></table></div></figure>


<p>We hope that you enjoy using Namshi&rsquo;s open source library. We&rsquo;ve been using this library for almost a year and
it&rsquo;s working fine with no issues on our side. As always, any feedback and pull requests are welcome :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 DevOps practices you should consider starting today]]></title>
    <link href="http://namshi.github.io/blog/2014/09/01/5-devops-practices-you-should-consider-starting-today/"/>
    <updated>2014-09-01T09:33:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/09/01/5-devops-practices-you-should-consider-starting-today</id>
    <content type="html"><![CDATA[<p>DevOps simply stresses on communication, collaboration and integration between software developers and information technology (IT) operations professionals a.k.a sys admins. it&rsquo;s goal is to support automation and maximize predictability, efficiency, security and maintainability of operational processes, meaning you can deploy 5 times on production on the same day with confidence that all systems will be fully operational. This post is moreover a software enginner&rsquo;s point of view on the DevOps side.</p>

<!-- more -->


<p>It goes without mentioning, to build a robust architecture you will need to follow the industry standards for example, use a distributed version control system &ndash; <a href="http://git-scm.com/">git</a> is a great one, use automated deployment tools &ndash; you should check <a href="http://capistranorb.com/">Capistrano</a>, write automated tests using framework like <a href="http://phpunit.de/">PHPUnit</a>, have some form of continuous integration &ndash; you can run automated tests with <a href="https://travis-ci.com/">Travis CI</a> on different versions of a language and have some internal documentation in place which includes basic to advanced things about the codebase and the systems used. Following similar rules, at <a href="http://www.namshi.com">Namshi</a> we use some <a href="http://en.wikipedia.org/wiki/DevOps">DevOps</a> practices which are very helpful to us, here are some main ones:</p>

<h2>Virtual Development Environment -Vagrant</h2>

<p><a href="http://www.vagrantup.com/">Vagrant</a> is a virtual development environment that works as controller to a virtual machine on your main machine. The virtual machine has all needed software stack installed, each software is installed as a config. It creates a reproducible and portable development machine which is shared among all the developers, that in turn eliminates &ldquo;Works on my machine&rdquo; syndrome and also help to get started with working on the codebase in a matter of hours compared to a day.</p>

<p>With use of vagrant, it is very easy to install new software and update them. You just add some scripts to how the vagrant box is configured and push the changes. All the software engineers will pull it, reload the vagrant machine and done. All of them have the new software and the correct version of it. As the configs, services and even file paths are shared everyone is on the same page when discussing about the system. If you are already interested in vagrant don&rsquo;t hesitate to start reading it&rsquo;s <a href="http://docs.vagrantup.com/v2/getting-started/index.html">docs</a>.</p>

<h2>Atomic Deployments</h2>

<p>Some months back we used to follow a revised version of <a href="http://nvie.com/posts/a-successful-git-branching-model/">gitflow</a> and grouped multiple tickets in same deployment, basically some completed tickets (generally 4-8) where merged to the <code>develop</code> branch and then merged to the  <code>release</code> branch. A tag was created from the <code>release</code> branch say <code>1.2.3</code> and it was deployed to <code>staging</code> then <code>production</code> after tests were ok. If all goes well the tag is merged to <code>master</code>. Issues with this was, if we had a problem after the deployment pinpointing which ticket introduced this issue was difficult.</p>

<p>Lets fast forward to now, currently we do <strong>atomic deployments</strong>, it means only one ticket is deployed at a time. Each ticket has it&rsquo;s sole deployment. First the ticket is deployed to <code>staging</code> tested and if everything is fine then it&rsquo;s deployed to production.</p>

<p>So, you completed your ticket all the automated tests have passed and your code has been reviewed, then</p>

<ol>
<li>You deploy it on <code>staging</code> environment after making sure that your branch is rebased with latest <code>master</code>.</li>
<li>If all tests are fine a tag is created from your ticket&rsquo;s branch say <code>1.2.3</code>.</li>
<li>The tag <code>1.2.3</code> is deployed to production.</li>
<li>If all goes well on production, then the tag <code>1.2.3</code> is merged to master.</li>
</ol>


<p>The above steps are carried out for each completed ticket. In case of <strong>atomic deployment</strong> if anything goes wrong, we know what is the cause of it as a ticket is generally a small unit of work. In both cases atomic or grouped deployment, <code>master</code> is always the stable branch deployable to production anytime.</p>

<h2>Multiple staging environments</h2>

<p>As we adopted <strong>atomic deployments</strong>, we needed to wait for the staging environment to be free to test our completed ticket(s). Sometimes the wait was more that a day if we had multiple tickets that had higher priority. There by, we devised a new way to make multiple staging deployments possible, how? The basic idea is:</p>

<ol>
<li>Deploy with a <code>standalone</code> deployment flag for the ticket branch let&rsquo;s say <code>cancel-email</code>. (Standalone deployment will mean it will be deployed to a folder on the <code>staging</code> server same as the branch name which is <code>cancel-email</code> in this case.)</li>
<li>To access codebase for this deployed branch (<code>cancel-email</code>), the software engineer who deployed will create a cookie lets say <code>staging-route</code> on the browser with value of the branch name <code>cancel-email</code> and send request from the browser which has this <strong>magic</strong> cookie.</li>
<li>Nginx will read the <code>staging-route</code> cookie if it&rsquo;s not set, it will route the request to the main staging. If the <code>staging-route</code> cookie is set Nginx will route the request to the branch name folder which will be something like <code>/path/to/codebase/cancel-email</code> and not <code>/path/to/codebase/main</code>.</li>
</ol>


<p>Simple yet effective solution to having a single staging problem. We are still improving it to be used in all our use cases, but the basic idea makes it possible to test multiple tickets independently and without waiting for the <strong>main</strong> <code>staging</code> environment to be free. We used <code>cookie</code> to achieve this instead of URL parameters or subdomains because we can do cookie forwarding that works for all our apps which use Nginx or NodeJs.</p>

<h2>Active logging and monitoring</h2>

<p>We are very keen on logging the events that take place in our system for example, if an email is sent notifying a customer about order being shipped, it is logged. As the number of logs is huge, to help ourselves from drowning in the text logs we use some log management and monitoring tools that help both the development team and the sys admins team. We currently use <a href="http://newrelic.com/">NewRelic</a>, <a href="http://graylog2.org/">Graylog2</a> and <a href="https://www.pagerduty.com/">PagerDuty</a> with a mix of some internal notification systems. These useful tools give us a real time view of what is happening on the systems as well as the health report of the systems.</p>

<p>For software engineers, it is always good to know that the code you wrote is behaving properly as you expected, this is where the Reports from NewRelic and the deliberate logs in Graylog come in very handy to know how the code is working.</p>

<h2>Zero Downtime Deployment</h2>

<p>I remember the days around two years back, whenever we deployed to production it would have ~1 minute of downtime (maintenance page) for the files to be pulled and the database migrations to run and other tasks. Now, we see almost no downtime during deployments. It has been possible because of <a href="http://capistranorb.com/">Capistrano</a>. When deploying it performs all the tasks and if all tasks are fine then just switches the symlink to point to the new code resulting in almost zero downtime deployment. For NodeJs we use <a href="http://tech.namshi.com/blog/2014/06/27/clusterjs-clusterify-your-nodejs-applications-and-achieve-zero-downtime-deployments/">clusterjs</a>, which reloads a cluster in place of restarting it and eliminating any downtime without dropping any connection, thus we don&rsquo;t need the maintenance page any more.</p>

<p>Zero Downtime Deployment in case of working system that needs feature upgrade is a shared responsibility between the development team and the sys admins team. In case it&rsquo;s related only to systems like upgrading MYSQL from 5.5 to 5.6, there will be nothing the software engineer can do while the upgrade happens, but before the upgrade the impact analysis should be done where both teams will need to collaborate. There should also be a contingency plan for rollback for each upgrade or new system deployment. Even when working for tickets that need big changes, we as software engineers implementing it should always think about backwards compatibility which can make sure least possible downtime.</p>

<p>If DevOps is about more collaboration and communication between the development team and the sys admins team to achieve higher predictability, maintainability, security and efficiency we are definitely striding to the right direction. We are looking for a <a href="http://tech.namshi.com/join-us/">devOps engineer</a>, if you think we are applying best practices in devOps and you want to join a vibrant team at Namshi get in touch.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Welcome Daniel!]]></title>
    <link href="http://namshi.github.io/blog/2014/08/31/welcome-daniel/"/>
    <updated>2014-08-31T21:37:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/31/welcome-daniel</id>
    <content type="html"><![CDATA[<p><img class="team left" src="http://namshi.github.io/images/daniel.png"></p>

<p>We are very excited to welcome <a href="http://namshi.github.io/team#Daniel%20Ribeiro">Daniel</a> in
the crazy Namshi family!</p>

<p>Daniel Ribeiro is a Technical Leader, Senior Software Engineer,
PHP 5.3 Zend Certified Engineer (ZEND021458), Speaker and
Evangelist from Brazil. He’s also a member of the local
PHP community (PHPSC), and has been working with software
engineering since 2006. His focus is on software engineering
best practices, both concerning the code and the process of
software development. He has a quite solid experience with agile
practices and leading development teams to enterprise application
standards and practices. Technically, he works with a lot of
best practices, such as Behavior-Driven Development (BDD). He
also has a background on architecture patterns, such as Domain
Driven Design (DDD) and Service Oriented Architecture (SOA). He
loves to work with high quality code, especially concerning
advanced software engineering concepts, such as the SOLID
principles and the GoF design patterns.</p>

<!-- more -->


<p>I am personally very excited as Daniel and me have been
talking about working together for a while, and we finally
managed to get a chance of getting hands down to the code
together!</p>

<p>He will bring good seniority to our team as well as good
knowledge of best practices and enterprise <em>modus operandi</em>;
last but not least, Daniel has been eager to accept the challenge
of taking a closer look at NodeJS as it&rsquo;s getting bigger and
bigger in our stack.</p>

<p>Looking forward to get the brazilian vibes at our desks!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP Generators explained]]></title>
    <link href="http://namshi.github.io/blog/2014/08/31/php-generators-explained/"/>
    <updated>2014-08-31T13:05:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/31/php-generators-explained</id>
    <content type="html"><![CDATA[<p><code>Generators</code> are one of the new cool stuff on <code>PHP 5.5</code>, but it&rsquo;s not a new feature in software programming languages, for example it&rsquo;s on <code>Python</code> since version 2.2 on 2001 and now in the draft <code>ECMAScript</code> 6  (Javascript) specification.</p>

<p>They are a simple and powerful tool for creating <code>iterators</code>. They are like regular functions but using the <code>yield</code> statement whenever they want to return data. A <code>generator</code> looks like a function but behaves like an iterator, it&rsquo;s useful for <code>lazy evaluation</code> &ldquo;which delays the evaluation of an expression until its value is needed&rdquo;.</p>

<!-- more -->


<p>Here are some examples in different languages:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// infinite id generator in JavaScript</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span><span class="o">*</span> <span class="nx">generateId</span><span class="p">(){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">yield</span> <span class="nx">index</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">gen</span> <span class="o">=</span> <span class="nx">idMaker</span><span class="p">();</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">gen</span><span class="p">.</span><span class="nx">next</span><span class="p">().</span><span class="nx">value</span><span class="p">);</span> <span class="c1">// 0</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">gen</span><span class="p">.</span><span class="nx">next</span><span class="p">().</span><span class="nx">value</span><span class="p">);</span> <span class="c1">// 1</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">gen</span><span class="p">.</span><span class="nx">next</span><span class="p">().</span><span class="nx">value</span><span class="p">);</span> <span class="c1">// 2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">//</span><span class="n">Python</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">generateId</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
</span><span class='line'>    <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">while</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">:</span>
</span><span class='line'>        <span class="k">yield</span> <span class="n">num</span> <span class="o">++</span>
</span><span class='line'>
</span><span class='line'><span class="n">count_gen_ids</span> <span class="o">=</span> <span class="n">count</span><span class="p">(</span><span class="n">generateId</span><span class="p">(</span><span class="mi">1000</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">//PHP</span>
</span><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">generateId</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$currentId</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="k">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">yield</span> <span class="o">++</span> <span class="nv">$currentId</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span><span class="p">(</span><span class="nv">$index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$index</span> <span class="o">&lt;</span> <span class="mi">1000</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">echo</span> <span class="nv">$index</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In this examples you would notice that we are using the keyword <code>yield</code> instead of <code>return</code>. <code>return</code> will pass value to the function caller then the function will finish the execution, <code>yield</code> will pass a value then pause the execution of the function &ldquo;which now became a generator&rdquo; till the function caller ask for the next value. Then <code>yield</code> again and again will return values to the function caller.</p>

<p>Using generators is useful in cases where you want iterations on demand, and you will end up with less resources consumption and also still the chance to send some data back to the generator function on any given iteration.</p>

<p>When you have situations that you are fetching large sets of data, you can use generators to <code>lazy load</code> (&ldquo;lazy load is to post pone fetching data till the point that you actually need it) your data sets or doing a lot of computation with big amounts of data.</p>

<p>Imagine that you have the code to execute a query on the database, instead of fetching and returning the whole data at the same time, you can simply return a generator function containing the query cursor that yields one data row at a time.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">getUsers</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$dbh</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">PDO</span><span class="p">(</span><span class="s1">&#39;mysql:host=xyz;port=xyz;dbname=xyz&#39;</span><span class="p">,</span> <span class="s1">&#39;[...]&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$stmt</span> <span class="o">=</span> <span class="nv">$dbh</span><span class="o">-&gt;</span><span class="na">prepare</span><span class="p">(</span><span class="s2">&quot;SELECT * FROM users&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="na">execute</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">while</span> <span class="p">(</span><span class="nv">$rs</span> <span class="o">=</span> <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="na">fetch</span><span class="p">(</span><span class="nx">PDO</span><span class="o">::</span><span class="na">FETCH_OBJ</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>           <span class="nx">yield</span> <span class="nv">$rs</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span> <span class="nx">finally</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="na">closeCursor</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nv">$users</span> <span class="o">=</span> <span class="nx">getUsers</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="nv">$users</span> <span class="k">as</span> <span class="nv">$user</span><span class="p">){</span>
</span><span class='line'>    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Speaking of Javascript, one great usage example for generators is the <a href="http://taskjs.org/">task</a> library, a combination of <a href="http://domenic.me/2012/10/14/youre-missing-the-point-of-promises/"><code>promises</code></a>, and <code>generators</code> to write asynchronous callbacks as beautiful as synchronous code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">go</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="p">{</span> <span class="nx">spawn</span><span class="p">,</span> <span class="nx">join</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">task</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">out</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;out&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">spawn</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">out</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;reading...\n&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="p">[</span> <span class="nx">f1</span><span class="p">,</span> <span class="nx">f2</span> <span class="p">]</span> <span class="o">=</span> <span class="nx">yield</span> <span class="nx">join</span><span class="p">(</span><span class="nx">read</span><span class="p">(</span><span class="s2">&quot;sleep.html&quot;</span><span class="p">),</span> <span class="nx">read</span><span class="p">(</span><span class="s2">&quot;read.html&quot;</span><span class="p">));</span>
</span><span class='line'>            <span class="nx">out</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">+=</span> <span class="s2">&quot;sleep.html: &quot;</span> <span class="o">+</span> <span class="p">(</span><span class="nx">f1</span><span class="p">.</span><span class="nx">responseText</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">out</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">+=</span> <span class="s2">&quot;read.html: &quot;</span> <span class="o">+</span> <span class="p">(</span><span class="nx">f2</span><span class="p">.</span><span class="nx">responseText</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">e</span><span class="p">.</span><span class="nx">stack</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\n/</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">line</span><span class="p">)</span> <span class="p">{</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">line</span><span class="p">)</span> <span class="p">});</span>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">out</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;error: &quot;</span> <span class="o">+</span> <span class="nx">e</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally you need to consider some stuff before start using <code>Generator</code>, beware that once it get consumed you cannot reset it, you will need to recall it again.</p>

<p>Also keep resources like db connection and file stream busy on the <code>Generator</code> function could be a problem if you are heavily use this resources and you need to release it as soon as possible.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #53]]></title>
    <link href="http://namshi.github.io/blog/2014/08/28/newsletter-number-53/"/>
    <updated>2014-08-28T16:11:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/28/newsletter-number-53</id>
    <content type="html"><![CDATA[<blockquote><p><strong>BOOM!</strong> As mentioned in the last newsletter, we were working on four new open souce libraries and two of them are already out !!!</p>

<ul>
<li><p><a href="https://github.com/namshi/shisha"><strong>shisha, smoke tests made easy!</strong></a> A cool nodejs library by <a href="http://tech.namshi.com/team/#Shidhin%20CR">Shidhin</a> and <a href="http://tech.namshi.com/team/#Mohamad%20Hallal">Hallal</a> that let&rsquo;s you
write smoke tests in an easy way.</p></li>
<li><p><a href="https://github.com/namshi/node-dock"><strong>node-dock, a sweet remedy for all your docker problems!</strong></a> Another node library by <a href="http://tech.namshi.com/team/#Hossam%20Faris">Hossam</a> and <a href="http://tech.namshi.com/team/##Luciano%20Colosio">Lucio</a> that
has an handy command (dock) that plugs on top of your usual docker commands adding some sugar and some handy functionality on top of it.</p></li>
<li><p>Even <a href="http://tech.namshi.com/team/#Alessandro%20Nadalin">Alex</a> released another tiny and cool node lib called <a href="http://tech.namshi.com/blog/2014/08/22/node-file-ensure-a-small-filesystem-utility-to-make-sure-a-file-is-there/"><strong>node-file-ensure</strong>, a small filesystem utility to make sure a file is there</a></p></li>
<li><p>Lucio also wrote a post detailing his first months here at Namshi: <a href="http://tech.namshi.com/blog/2014/08/27/so-far-dot-dot-dot-so-fun/">check it out</a>!</p></li>
<li><p>Last but not least, <a href="http://tech.namshi.com/team/#Geshan%20Manandhar">Geshan</a> on his vacation back home, has improvised this talk at PHP Developers Meetup Nepal on message queues (AMQP) with RabbitMQ and Symfony <a href="http://mq-talk.herokuapp.com/">http://mq-talk.herokuapp.com/</a></p></li>
</ul>
</blockquote>

<p>And here we are as usual with a list of interesting links to keep you busy during the upcoming weekend:</p>

<ul>
<li><p><a href="https://github.com/OptimalBits/redbird">A modern reverse proxy for node</a></p></li>
<li><p><a href="http://buff.ly/1nEYH2M">Open Source ain’t Charity</a></p></li>
<li><p><a href="https://speakerdeck.com/patrickhamann/ship-it-re-develop-conference-august-2014">Ship it! A story of continuous delivery at theguardian.com</a></p></li>
<li><p><a href="https://www.gov.uk/service-manual/agile/running-retrospectives.html">Reviewing a team&rsquo;s work and the way it is done at Gov.uk Design Services</a></p></li>
<li><p><a href="http://buff.ly/1wDTrGe">Plain Old #JavaScript Object Visualization</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://t.co/eDh0CeQYpA">Stop whatever you are doing and look at p6 of this paper</a></p></li>
<li><p><a href="http://buff.ly/1lrfCus">Rocket Internet co-founder sees venture take off in Middle East</a></p></li>
<li><p><a href="http://buff.ly/1q9KvDq">V8&rsquo;s memory mysteries</a></p></li>
<li><p><a href="http://buff.ly/1sh7Lhn">49ers’ stadium Wi-Fi served 25,000 concurrent users, 2.13TB in all</a></p></li>
<li><p><a href="http://buff.ly/1mA3a6D">Software Developers and Asperger&rsquo;s Syndrome</a></p></li>
<li><p><a href="http://buff.ly/1v8pUmg">Docker Service Discovery Using Etcd and Haproxy</a></p></li>
<li><p><a href="http://buff.ly/1tqNB7a">Stellar: Fast database snapshot and restore tool for development</a></p></li>
<li><p><a href="http://buff.ly/1seRoll">Javascript optimization killers</a></p></li>
<li><p><a href="http://buff.ly/1mz2vlT">How I Hacked My Husband&rsquo;s Programming Addiction</a></p></li>
<li><p><a href="http://mq-talk.herokuapp.com/#/14">programmming mantras to remember</a></p></li>
<li><p><a href="http://buff.ly/1myYCxx">Facebook Unveils Its Load-Balancing System: Autoscale</a></p></li>
<li><p><a href="http://buff.ly/1wiCeln">Docker 1.2.0, with restart policies</a></p></li>
<li><p><a href="http://buff.ly/1lmw8vT">Semantic Versioning Is Not the Solution</a></p></li>
<li><p><a href="http://buff.ly/1mtjtSS">The Plague of Methods and Frameworks</a></p></li>
<li><p><a href="http://buff.ly/1s2pxot">Evolution of Docker and Its Impact on AWS &ndash; i build the cloud</a></p></li>
<li><p><a href="http://buff.ly/1s2p4Cu">Uber opens up its API – and creates a new platform</a></p></li>
<li><p><a href="https://www.glasswire.com">GlassWire Network Security Monitor &amp; Firewall Tool</a></p></li>
<li><p><a href="https://netguru.co/blog/posts/procrastination-and-overcoming-programmers-block">Procrastination and Overcoming Programmer&rsquo;s Block</a></p></li>
<li><p><a href="http://algorithm.dk/posts/rtfm-0day-in-ios-apps-g-gmail-fb-messenger-etc">RTFM 0day in iOS apps: G+, Gmail, FB Messenger</a></p></li>
<li><p><a href="http://www.codefights.com">CodeFights &ndash; Become a Code Champion</a></p></li>
<li><p><a href="http://hoa-project.net/En/">Hoa project, a cool set of PHP lib (they deserve more community involvement &ndash; i.e. tests are missing, own standards)</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/bubblejs-a-16k-solution-to-a-common-problem--cms-21986">Bubble.js: A 1.6K Solution to a Common Problem</a></p></li>
<li><p><a href="http://knplabs.com/blog/2011/05/17/agile-nodejs/">We love Symfony2… but we also love Agility and Node.js</a></p></li>
<li><p><a href="http://www.codeproject.com/Articles/604417/Agile-software-development-methodologies-and-how-t">Agile software development methodologies and how to apply them</a></p></li>
<li><p><a href="http://lafikl.github.io/perfBar/">website performance metrics</a></p></li>
<li><p><a href="https://github.com/OptimalBits/redbird">A modern reverse proxy for node</a></p></li>
<li><p><a href="http://mobileangularui.com/">Mobile Angular UI</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So far... so fun!]]></title>
    <link href="http://namshi.github.io/blog/2014/08/27/so-far-dot-dot-dot-so-fun/"/>
    <updated>2014-08-27T13:43:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/27/so-far-dot-dot-dot-so-fun</id>
    <content type="html"><![CDATA[<p> Stardate: <strong>Wed, Apr 23, 2014 at 12:48 PM (GTM+1)</strong></p>

<p> In a cold italian spring day my phone vibrates, as all nerd&rsquo;s phones do many and many times a day.<br>
 The usual swipe, the screen unlocks and the conclusion of what started just 3 days earlier, in a rushing set of coding challenges and interviews, bears in front of my eyes:</p>

<p><em>&ldquo;Dear Luciano,</em></p>

<p><em>I am delighted to attach an Offer Letter in the capacity of a Senior Frontend Engineer at Namshi, please review and confirm the receipt of the same.</em></p>

<p><em>Your provisional start date is the 11th May, 2014, we require the following scanned documents in order to process your visa:
Passport – colored copy including first page, renewal page (if any).</em><br>
<em>Photograph (with a white back ground)</em><br>
<em>(Optional) Attested degree/high school certificates (stamped from the UAE embassy at the country the degree is issued and the Ministry of Foreign Affairs in Dubai)</em><br>
<em>2 References (Names, Number &amp; Designation).</em><br>
<em>If you have any questions, please feel free to get in touch with me directly.&ldquo;</em></p>

<p>And that&rsquo;s how it started.</p>

<br>


<p>My departure gets postponed to allow me to attend the <a href="http://2014.jsday.it/">jsDay</a> &amp; <a href="http://2014.phpday.it/">phpDay</a> conference in italy, together with part of what soon will be my new team:</p>

<p><a href="https://twitter.com/TechNamshi/status/467708302143815680"><img class="center" src="http://namshi.github.io/images/posts/rasmus-namshi-scaled.png" width="400" title="result" ></a></p>

<br>


<p>I&rsquo;m right now in the middle of my probation period, a 3 months long roller coaster ride in what&rsquo;s probably my most challenging and fulfilling work adventure in my career so far and, bare with me, I&rsquo;d like to share the story if you&rsquo;re pleased.</p>

<br>


<p>In a matter of a couple of weeks I&rsquo;m finally stepping on the groud of Dubai.<br>
The next morning Alex picks me up from my hotel: <strong>Namshi</strong>, at last.<br></p>

<p>The HR department gives me a warm welcome and I&rsquo;m ready to meet <a href="http://tech.namshi.com/team/#Shidhin%20CR">Shidhin</a>, the other new frontend developer I&rsquo;ll work with, we quickly find ourselves sharing the same keyboard and pair prgramming on our 1st project.<br>
Easy welcome, really, the 1st task we&rsquo;re faced with is &ldquo;Just remake our checkout&hellip; we&rsquo;ll release it before Ramadan begins&rdquo;, states the boss&hellip; In a month!<br>
After all it&rsquo;s probably one of the most important parts of an e-commerce&rsquo;s UI, if it doesn&rsquo;t work people cannot pay and you know what they say: <em>no money, no honey!</em><br>
Peace of cake&hellip; &ndash;_^&#8217;</p>

<p>It&rsquo;s almost 8pm and we manage to finally push out branch and open our 1st PR! Which, the next day, gets nicelly bashed of notes and comments.<br>
Kind of slapping wake up. Well, nobody said it would have been easy here, one thing it&rsquo;s clear since the beginning: no matter how many years of experience you have, one of the most important things in our job is <strong>&ndash; never stop learning &ndash;</strong>, bring your expertiese within the team but be ready to learn a lot from what it quickly shows as a really high and capable group of professionals.</p>

<p>Days go by and in a rush of javascript, PRs and more slap-in-the-face comments some how my enthusiasm grows and my passion gets refeshed. For once I&rsquo;m really feeling like I&rsquo;m back at 25, with tons of stuff to do and learn and with the push to do it.</p>

<p>Julia, code name for the new checkout, is growing fast. I keep looking at the source, amazed by what it (she?) looks like.<br>
Probably the cleanest and finest peace of software I ever contributed to at that point in time. With the dear help of Shidhin, often guiding me with good tips on the fine art of Angular&rsquo;s tameing, and <a href="http://tech.namshi.com/team/#Alessandro%20Nadalin">Alex</a> carefully preventing my bias from polluting the new baby.<br> Thanks guys :)<br>
As said, it&rsquo;s always about learning, and I&rsquo;m in a place where for once in years I&rsquo;m not the one that kind of knows-it-all. After all, it&rsquo;s what I was looking for!</p>

<p>It&rsquo;s well known one of the best ways to grow is to push your self, so don&rsquo;t pick the easy task.<br>
In this spirit I blindly jump on the error handling. The catch is: the app needs to solve it&rsquo;s own errors.<br>
It&rsquo;s while working on this part an idea came to my mind that in the evening got me publish my 1st oss project since I was here and 1st npm lib ever:<br>
<a href="https://github.com/unlucio/vpo">Value Path Objects</a><br>
It happened to be the last piece Alex was looking for in order to be able to publish one more namshi&rsquo;s oss project: <a href="https://github.com/namshi/reconfig">reconfig</a><br>
Been shy at base I always had problems publishing my code, but that night I guess I got the right push and I finally did it, and I&rsquo;m glad it happened. A new frenzy grew and shortly after I had the urge of sharing some more <a href="https://github.com/unlucio/CarmenSandiego">CarmenSandiego</a>.</p>

<p>This brings us to the new moon and with it Ramadn cames. Julia is done, but since the holy month is a great opportunity for sales, we hold her back from going public. I&rsquo;m still not sure how we got it done.</p>

<p>With the 1st project reaching maturity I get the opportunity of bugging people to let me code some Node.js (finally :D). Looks like we need a 0 downtime solution for updating our node applications. A little bit of javascrit, and lots of wrestling with capistrano and the filesystem later, and <a href="https://github.com/namshi/clusterjs">clusterjs</a> is born. Published at ~1am on a Thursday night (well, actually Friday morning), it&rsquo;s the 1st oss I push in an official Namshi&rsquo;s public repo. And I obviusly manage to make a mess a couple of times before getting the publishing process right. It&rsquo;s amazing how the excitement sometimes gets you out of control.</p>

<p><img class="center" src="http://namshi.github.io/images/posts/clusterjs-publishing.jpg" width="800" title="result" ></p>

<p>During Ramdan me and Shiddin take the change to refine the dear Julia and as Eid cames the lady is ready for her big Debut in Society.<br> The smoothest rollout I ever experienced.</p>

<p>From that day on another month has gone by. A couple of more libs leaked to the public, and I&rsquo;m now mainly working on internal node project. <br>Everyday there&rsquo;s a new challenge and the fun is always on. In the struggles, the laughs, the shishas and the lines of code flow countlessly and every day the bar is pushed a little higher.</p>

<p>It&rsquo;s not always all perfect, for sure. For instance during the week I don&rsquo;t see much sun light, but I try to catch up as much as possibile during the weekends :)<br>
Living by the sea is definitely a pro, and I get to scuba dive a lot :D</p>

<p>I always hated mondays (actually now Sundays are my Mondays, crazy reverse weekend ;P) and about an year ago I stumbled on this meme:</p>

<p><img src="http://scontent-a.cdninstagram.com/hphotos-xfa1/t51.2885-15/10009391_636510409754554_1999474227_a.jpg" alt="meme" /></p>

<p>Today I&rsquo;m happy to say: <strong>I don&rsquo;t hate mondays any more!</strong> :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node-file-ensure, a small filesystem utility to make sure a file is there]]></title>
    <link href="http://namshi.github.io/blog/2014/08/22/node-file-ensure-a-small-filesystem-utility-to-make-sure-a-file-is-there/"/>
    <updated>2014-08-22T19:42:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/22/node-file-ensure-a-small-filesystem-utility-to-make-sure-a-file-is-there</id>
    <content type="html"><![CDATA[<p>This weekend we&rsquo;ve come up with a small utility
that will make our life easier, and hopefully <strong>yours</strong>
as well!</p>

<!-- more -->


<p>We use cascading mechanisms for our configurations, so, for
example, we define the config in a few different files:</p>

<ul>
<li><code>base.yml</code>, that has all the common configurations</li>
<li><code>dev.yml</code>, which is for local environments</li>
<li><code>staging.yml</code>, which is for our staging environment</li>
<li><code>live.yml</code>, well&hellip;you guessed it!</li>
</ul>


<p>So, for example, a <code>live.yml</code> might look like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">domain</span><span class="p-Indicator">:</span>   <span class="s">&#39;namshi.com&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>whereas the base one has many more values:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apis</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span>   <span class="s">&#39;v1&#39;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">domain</span><span class="p-Indicator">:</span>    <span class="s">&#39;api.{{</span><span class="nv"> </span><span class="s">domain</span><span class="nv"> </span><span class="s">}}&#39;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">baseUrl</span><span class="p-Indicator">:</span>   <span class="s">&#39;https://{{</span><span class="nv"> </span><span class="s">apis.domain</span><span class="nv"> </span><span class="s">}}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>There&rsquo;s a problem with this approach: if one of the developers
wants to change a value in his <code>dev.js</code> git will tell him that
the file has changed, which is quite annoying!</p>

<p>To overcome this we always put it in the <code>.gitignore</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">dev.yml</span>
</span></code></pre></td></tr></table></div></figure>


<p>and instead commit a <code>dev.yml.example</code> file that has the
skeleton of the file, asking everyone, when booting the application
for the first time, to copy that file to a <code>dev.js</code>.</p>

<p>Things work flawlessly until you need to do this 10 times
(I mean, in 10 projects, like we do) or when you forget this step
during the installation and waste a lot of time trying to debug why
the application is not running correctly.</p>

<p>To overcome this annoying issue we decided to develop a small utility,
<a href="https://github.com/namshi/node-file-ensure">node-file-ensure</a>, that
does all of this for you:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">ensure</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;file-ensure&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">ensure</span><span class="p">(</span><span class="s1">&#39;./config/dev.yml&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">from</span><span class="o">:</span> <span class="s1">&#39;./config/dev.yml.example&#39;</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Simple as that!</p>

<p><code>ensure</code> will make sure to create an empty file if it doesnt find
the one you specified:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">ensure</span><span class="p">(</span><span class="s1">&#39;./config/dev.yml&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>and is able to copy the contents from another file,
like in the first example above:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">ensure</span><span class="p">(</span><span class="s1">&#39;./config/dev.yml&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">from</span><span class="o">:</span> <span class="s1">&#39;./config/dev.yml.example&#39;</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you need to run any check after <code>ensure</code> has run,
you can provide a callback:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">ensure</span><span class="p">(</span><span class="s1">&#39;path/to/config/dev.yml&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;path/to/config/dev.yml.example&#39;</span><span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="s1">&#39;path/to/config/dev.yml&#39;</span><span class="p">).</span><span class="nx">toString</span><span class="p">()</span> <span class="o">===</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="s1">&#39;path/to/config/dev.yml.example&#39;</span><span class="p">).</span><span class="nx">toString</span><span class="p">());</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it! Tests run through mocha and we&rsquo;ve set them up
on <a href="https://travis-ci.org/namshi/node-file-ensure">travis</a>,
to be on the safe side :)</p>

<p>If you have patches, suggestions or rants&hellip;feel free to open
an <a href="https://github.com/namshi/node-file-ensure/issues">issue on GitHub</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #52]]></title>
    <link href="http://namshi.github.io/blog/2014/08/21/newsletter-number-52/"/>
    <updated>2014-08-21T12:37:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/21/newsletter-number-52</id>
    <content type="html"><![CDATA[<blockquote><p>As you know the IT team loves opensource and the idea <a href="http://github.com/namshi">to give back to the &ldquo;community&rdquo;</a>! <br />
That&rsquo;s why on Tuesday evening we did an internal hackathon, we bootstrapped four open source projects that we are going to release soon, <br /> stay tuned!<br />
<a href="http://tech.namshi.com/team/#Luciano%20Colosio">Lucio</a>, our Nodejs maniac, introduced the team to node&rsquo;s history:</p></blockquote>

<p><img class="center" src="http://namshi.github.io/images/posts/lucio-node-presentation.png" width="800" title="result" ></p>

<p>Below the usual list of interesting links we found this week:</p>

<ul>
<li><p><a href="http://buff.ly/1z2jZga">On Sexual Harassment in the Tech Industry</a></p></li>
<li><p><a href="http://buff.ly/1pYrQJF">Promoting Symfony: One step at a time</a></p></li>
<li><p><a href="http://buff.ly/YsjYqC">Token-base AngularJS auth</a></p></li>
<li><p><a href="http://buff.ly/1vZZGUm">Welcoming the Orchard and Fig team in Docker</a></p></li>
<li><p><a href="http://buff.ly/1ptfB8L">HTTP Shaming</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://elnur.pro/symfony-without-bundles/">Symfony without bundles, an interesting approach</a></p></li>
<li><p><a href="http://labs.qandidate.com/blog/2014/08/18/a-new-feature-toggling-library-for-php/">A new feature toggling library for PHP</a></p></li>
<li><p><a href="http://buff.ly/1psgj62">Understanding process.nextTick() &ndash; How To Node</a></p></li>
<li><p><a href="http://gwendall.github.io/way/">Way.JS: Simple, lightweight, persistent two-way databinding</a></p></li>
<li><p><a href="http://bjorn.tipling.com/state-and-regular-expressions-in-javascript">What you should know about JavaScript regular expressions</a></p></li>
<li><p><a href="http://fdietz.github.io/recipes-with-angular-js/">Recipes with Angular.js</a></p></li>
<li><p><a href="https://github.com/krakjoe/pthreads">Threading for PHP &ndash; Share Nothing, Do Everything :)</a></p></li>
<li><p><a href="https://github.com/propelorm/Propel2">Propel2 (ORM) for PHP 5.4</a></p></li>
<li><p><a href="http://taskjs.org/">generators + promises = tasks</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #51]]></title>
    <link href="http://namshi.github.io/blog/2014/08/14/newsletter-number-51/"/>
    <updated>2014-08-14T13:35:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/14/newsletter-number-51</id>
    <content type="html"><![CDATA[<p>It&rsquo;s #TechThursday again!</p>

<!-- more -->


<blockquote><p><a href="http://tech.namshi.com/blog/2014/08/13/were-hiring-dot-dot-dot-actually-were-hiring-moar/">W E &ndash; A R E &ndash; H I R I N G, we are hiring moar&hellip;!</a></p>

<p>Could you spot all those sad faces in the blog post? What are you waiting for? :)
We are also looking for a Frontend Developer, someone who is skilled on HTML5 and CSS3 and knows the basics of JavaScript but wants to expand his knowledge in that direction, <a href="https://github.com/namshi/coding-challenges/blob/master/frontend-developer.md">here is the coding challenge!</a></p>

<p>Other then open positions in the IT team, Namshi is looking for a <a href="https://www.smartrecruiters.com/Namshi/78541293-merchandising-data-processor-intern">Merchandising Data Processor intern</a>, please spread the word!</p></blockquote>

<p>And below the usual gorgeus list of interesting linkes to spice up your next weekend:</p>

<ul>
<li><a href="http://buff.ly/Y70Gai">Why I design at Facebook</a></li>
<li><a href="http://federico.galassi.net/2011/05/25/die-semicolon-die/">Die semicolon die!</a></li>
<li><a href="http://buff.ly/1osA6U2">Doing good work with bad tools</a></li>
<li><a href="http://buff.ly/Vgicql">Reserve your favorite username in new startups</a></li>
<li><a href="http://buff.ly/1kRHhEO">Reasoned PHP</a></li>
<li><a href="http://bocoup.com/weblog/javascript-arduino-digital-clock-johnny-five/">JavaScript: A Digital Clock with Johnny-Five</a></li>
<li><a href="https://github.com/jmcunningham/AngularJS-Learning">AngularJS Learning Resources</a></li>
<li><a href="https://t.co/FL1XdRK4kY">npm-dom Useful npm front-end modules</a></li>
<li><a href="http://buff.ly/1nyEJFV">Why I am leaving the best job I ever had</a></li>
<li><a href="http://buff.ly/1u4WIfx">MongoDB Inc. Appoints Dev Ittycheria as President and CEO</a></li>
<li><a href="http://buff.ly/1vjF3Cn">Greatest pr of all time</a></li>
<li><a href="http://buff.ly/1sDJhB5">Redis Sentinel at Flickr</a></li>
<li><a href="http://www.zdnet.com/what-is-docker-and-why-is-it-so-darn-popular-7000032269/">What is Docker and why is it so darn popular?</a></li>
<li><a href="http://codecondo.com/javascript-framework-showdown-use/">JavaScript Framework Showdown: Which Should You Use?</a></li>
<li><a href="http://alistapart.com/blog/post/the-most-dangerous-word-in-software-development">The Most Dangerous Word In Software Development</a></li>
<li><a href="https://github.com/krakjoe/pthreads">Threading for PHP &ndash; Share Nothing, Do Everything :)</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/cupsys/+bug/255161/comments/28">A funny bug in Ubuntu&hellip;</a></li>
<li><a href="https://github.com/propelorm/Propel2">Propel2 (ORM) for PHP 5.4</a></li>
<li><a href="http://taskjs.org/">Generators + promises = tasks</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[We're hiring...actually, we're hiring MOAR!]]></title>
    <link href="http://namshi.github.io/blog/2014/08/13/were-hiring-dot-dot-dot-actually-were-hiring-moar/"/>
    <updated>2014-08-13T12:14:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/13/were-hiring-dot-dot-dot-actually-were-hiring-moar</id>
    <content type="html"><![CDATA[<p>Just an heads up that we are looking for talented
engineers for our tech team, and our guys are very
sad they don&rsquo;t have too many new friends!</p>

<!-- more -->


<p>Besides looking for a Lead Mobile developer, as we
<a href="http://namshi.github.io/blog/2014/06/03/like-android-and-ios-lets-change-shopping-in-the-middle-east-together/">announced a few weeks back</a>,
we are looking for some other key figures in our team.</p>

<h2>No HTML/CSS love&hellip;</h2>

<p>Our frontend team, usually happy to write AngularJS
directives or a bunch of frontend-ish NodeJS apps,
is devastated as they feel they are missing a third
element who can help them achieve greatness.</p>

<p><img class="center" src="http://namshi.github.io/images/frontend-sad.png"></p>

<p>To make Lucio and Shidhin happy, we want to add a new
member in our team, a <strong>Frontend Developer</strong>, someone who
is skilled on HTML5 and CSS3 and knows the basics of
JavaScript but wants to expand his knowledge in that
direction.</p>

<p>You will work on a whole lot of new internal applications
as well as help streamlining our frontend processes, together
with the rest of the team: which frameworks shall we use? Bootstrap or
Foundation? How can we use Yeoman&rsquo;s generator to speed up
most of our code generation? How can we make our web apps
faster <a href="https://github.com/addyosmani/critical">extracting critical styles</a>
and so on? These are just a few questions you will need to
ask yourself once you come here.</p>

<p>You will come here knowing how to design a frontend (mastering
the presentation layer, so HTML, CSS, jQuery) but will leave Namshi
knowing how to build the presentation and logic behind a full
frontend application (AngularJS, Node or something more spicy
like <a href="http://www.polymer-project.org/">polymer</a>).</p>

<blockquote><p>Drop us an email at <a href="&#109;&#x61;&#x69;&#108;&#116;&#x6f;&#x3a;&#119;&#x6f;&#114;&#x6b;&#45;&#105;&#x6e;&#x2d;&#116;&#101;&#x63;&#x68;&#64;&#110;&#x61;&#x6d;&#115;&#104;&#x69;&#x2e;&#x63;&#x6f;&#109;">&#x77;&#x6f;&#x72;&#107;&#45;&#x69;&#x6e;&#x2d;&#x74;&#101;&#x63;&#104;&#x40;&#110;&#x61;&#109;&#115;&#104;&#x69;&#x2e;&#99;&#x6f;&#109;</a> to apply or simply
get more informations about this job opening!</p></blockquote>

<h2>Sitting on an empty (sysadmin) chair&hellip;</h2>

<p>Look at the systeam, so sad: they really
need some new buddy for their games.</p>

<p><img class="center" src="http://namshi.github.io/images/sys-sad.png"></p>

<p>The chair is empty, and that makes me so sad! If only
we could find someone who would like to come and join
the hottest SOA of the Middle East&hellip;</p>

<p>So yeah, we&rsquo;re also looking for a <strong>System Administrator</strong>,
someone who knows how configuration management works,
who has relevant experience on cloud infrastructures as
AWS and wants to use some of the latest technologies, like
Docker or Deis, to help us automate and scale the hell out
of our architecture; we are trying to switch towards a more
devops oriented organization, and need someone with that
mindset to improve the current state of the team: as an example,
we use <a href="http://serverspec.org/">serverspec</a> to test some of
our configurations, and would like someone who can get his/her
hands dirty with both programming and system administration
to help the team.</p>

<blockquote><p>Drop us an email at <a href="&#109;&#x61;&#105;&#x6c;&#x74;&#x6f;&#58;&#x77;&#111;&#114;&#107;&#x2d;&#105;&#x6e;&#45;&#x74;&#101;&#x63;&#104;&#x40;&#110;&#97;&#109;&#115;&#x68;&#105;&#x2e;&#99;&#x6f;&#109;">&#x77;&#x6f;&#x72;&#x6b;&#45;&#105;&#x6e;&#45;&#x74;&#x65;&#99;&#x68;&#64;&#110;&#97;&#x6d;&#x73;&#x68;&#105;&#46;&#99;&#111;&#109;</a> to apply or simply
get more informations about this job opening!</p></blockquote>

<h2>I don&rsquo;t know if he&rsquo;s crying because of loneliness or because of NodeJS&hellip;</h2>

<p>Look at how sad Cirpo, our lead API engineer, was
today:</p>

<p><img class="center" src="http://namshi.github.io/images/cirpo-sad.png"></p>

<p>It&rsquo;s true that he might be sad because we decided
to use a lot of NodeJS instead of PHP, but I
think his struggles also come from the fact that he feels
we need a good <strong>Senior Software engineer</strong>, specialized in
NodeJS, who can help the team getting more skilled with
this &ldquo;new&rdquo; platform.</p>

<p>The ideal candidate would have a few years of experience
on production-ready Node systems, and it would be a great
plus if we can get someone who has a broader experience
with different programming paradigms, as we feel the most
important part of this job is the brain, and it would be great
if we get someone that has been in a few different battlefields :)</p>

<p>We need someone who first solves the problem, then writes the
code (or, even better: first solves the problem, then writes the
test, then the code :-D).</p>

<blockquote><p>Drop us an email at <a href="&#109;&#97;&#x69;&#x6c;&#x74;&#111;&#58;&#x77;&#x6f;&#x72;&#107;&#45;&#x69;&#x6e;&#x2d;&#x74;&#101;&#x63;&#104;&#64;&#x6e;&#97;&#109;&#115;&#104;&#x69;&#46;&#99;&#x6f;&#109;">&#119;&#111;&#114;&#107;&#x2d;&#x69;&#110;&#x2d;&#116;&#x65;&#99;&#x68;&#x40;&#x6e;&#97;&#x6d;&#115;&#104;&#105;&#46;&#99;&#x6f;&#x6d;</a> to apply or simply
get more informations about this job opening!</p></blockquote>

<h2>About Namshi</h2>

<p>We have a <a href="http://namshi.github.io/join-us">JOIN US</a> page where we listed some of the key
benefits in working with us, but to recap the most important ones:</p>

<ul>
<li>the environment is great, young and people are passionate</li>
<li>the office is 1 minute away from the metro station</li>
<li>we offer competitive salaries</li>
<li>flexible working hours</li>
<li>being paid to write <a href="https://github.com/namshi">Open Source code</a></li>
<li>cakes! cakes! cakes!</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #50]]></title>
    <link href="http://namshi.github.io/blog/2014/08/07/newsletter-number-50/"/>
    <updated>2014-08-07T11:21:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/08/07/newsletter-number-50</id>
    <content type="html"><![CDATA[<p>Hey folks! Hope you had a great week!</p>

<p>Announcement:</p>

<blockquote><p>We are looking for a senior software engineer passionate about NodeJS and a frontend designer who is passionate and kick-ass in CSS and HTML and wants to expand his skillset with some JavaScript &mdash; we &lt;3 javascript :)</p>

<p>We will detail in a separate post but, for the time being, feel free to reach out to submit your linkedin / github profile to <a href="&#x6d;&#97;&#x69;&#108;&#x74;&#x6f;&#58;&#x77;&#x6f;&#114;&#107;&#x2d;&#x69;&#x6e;&#x2d;&#x74;&#101;&#99;&#104;&#x40;&#x6e;&#x61;&#x6d;&#115;&#x68;&#105;&#x2e;&#x63;&#111;&#109;">&#119;&#x6f;&#114;&#x6b;&#45;&#105;&#110;&#45;&#x74;&#101;&#99;&#104;&#x40;&#110;&#x61;&#109;&#x73;&#x68;&#x69;&#x2e;&#99;&#111;&#109;</a></p></blockquote>

<p>Here are your links for this week!</p>

<!-- more -->


<ul>
<li><a href="http://buff.ly/V0CWSU">Mind-blowing facts about Google</a></li>
<li><a href="http://buff.ly/1sdQbLl">Is TLS Fast Yet?</a></li>
<li><a href="http://buff.ly/1s9dGW2">Amazon RDS Now Supports T2 Instances</a></li>
<li><a href="http://buff.ly/1qKumSE">The One Big Thing That Will Reduce Software Bugs, But No One Does It</a></li>
<li><a href="http://buff.ly/1ktk8s2">CoreOS and Docker through Deis: Your Paas. Your Rules.</a></li>
<li><a href="http://buff.ly/1rWPMNg">The Twelve-Factor App</a></li>
<li><a href="http://buff.ly/UFHnmh">Redis 3.0.0 beta 8 is out</a></li>
<li><a href="http://buff.ly/1qx66Ds">Critiquing Facebook’s new #PHP spec</a></li>
<li><a href="http://www.youtube.com/watch?v=UlREhZ-orlk">ideavim &ndash;  plugin that let&rsquo;s you use vim keybindings inside a intellj based ides (phpstorm/webstorm ide</a></li>
<li><a href="http://mckoss.com/jscript/object.htm">A very old post, but still super good, about object oriented programming in JavaScript</a></li>
<li><a href="http://superuser.com/questions/792607/why-does-windows-think-that-my-wireless-keyboard-is-a-toaster">Why does windows think that my wireless keyboard is a toaster</a></li>
<li><a href="http://www.gameofhacks.com/">Game of Hacks</a></li>
<li><a href="http://www.jvanbaarsen.com/blog/2014/07/02/why-i-think-having-passion-as-a-developer-matters">Why I think having passion as a developer matters</a></li>
<li><a href="http://nakedsecurity.sophos.com/2014/08/02/badusb-what-if-you-could-never-trust-a-usb-device-again">BadUSB what if you could never trust a USB device again</a></li>
<li><a href="http://nakedsecurity.sophos.com/2014/07/31/3-security-mistakes-small-companies-make-and-how-to-avoid-them">3 security mistakes small companies make and how to avoid them</a></li>
<li><a href="https://www.aftership.com/">Track and Audit shipments for free</a></li>
<li><a href="https://m.youtube.com/watch?v=SqeOPLB2xAM">DConf 2014: Declarative programming in D by Mihails Strasuns aka Dicebot</a></li>
<li><a href="https://github.com/facebook/rocksdb/wiki">Welcome to RocksDB!</a></li>
<li><a href="https://github.com/scobal/seyren">Alerting Dashboard for Graphite</a></li>
<li><a href="http://www.fastcolabs.com/3033680/why-you-cant-learn-to-code-without-open-source">Why You Can&rsquo;t Learn To Code Without Open Source</a></li>
<li><a href="http://keyholesoftware.com/2014/07/23/javascript-promises-are-cool">JavaScript Promises Are Cool</a></li>
<li><a href="http://spectrum.ieee.org/static/interactive-the-top-programming-languages">The Top Programming Languages in IEEE Spectrum’s 2014 Ranking</a></li>
<li><a href="https://blog.engineyard.com/2014/hhvm-hack-part-5">Building a Better PHP &ndash; Part 5: Static Analysis &amp; other CLI tools</a></li>
<li><a href="http://www.youtube.com/watch?v=gpNbmEnRLBU">dotScale 2014 &ndash; Fabien Potencier &ndash; My Take on PHP</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #49]]></title>
    <link href="http://namshi.github.io/blog/2014/07/31/newsletter-number-49/"/>
    <updated>2014-07-31T11:50:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/07/31/newsletter-number-49</id>
    <content type="html"><![CDATA[<p>TechThursday is here!</p>

<blockquote><p>Namshi is hiring! <a href="http://t.co/kfUX1C0MMy">HR Generalist in United Arab Emirates</a> Please spread the word!</p>

<p>So, Ramadan is over! The team is excited to get be back on full throttle! Lots of exciting stuff on the way!</p></blockquote>

<p>Here are the links we have for you this week:</p>

<!-- more -->


<ul>
<li><a href="http://www.smashingmagazine.com/2014/07/30/declarative-programming/">Declarative Programming And The Web</a></li>
<li><a href="http://jessitron.github.io/git-happens/">Git Happens &ndash; A must watch video for every git user</a></li>
<li><a href="http://phptest.club/t/selenium-client-libraries-comparison/36">Selenium Client Libraries built with PHP, a comparison</a></li>
<li><a href="http://www.slideshare.net/rdohms/composer-for-busy-developers-phptek13">Composer for busy developers &ndash; slides from php|tek13 talk</a></li>
<li><a href="http://marcomanzoni.me/blog/how-pgp-works-under-the-hood">How PGP works under the hood</a></li>
<li><a href="http://keystonejs.com/">Node.js CMS and web application platform built on Express and MongoDB</a></li>
<li><a href="http://nakedsecurity.sophos.com/2014/07/28/panopticlick-reveals-the-cookie-you-cant-delete">Panopticlick reveals the cookie you can’t delete</a></li>
<li><a href="http://t.co/aywaIqN901">The community now has an initial draft of a PHP language specification</a></li>
<li><a href="http://buff.ly/UB1Rg3">Eloquent JavaScript</a></li>
<li><a href="https://t.co/AU3sTqw0xc">Facebook have released an in-depth guide for their Flux architecture for frontend applications, including a TodoMVC</a></li>
<li><a href="http://buff.ly/1o6ZqJ7">The New GitHub Issues</a></li>
<li><a href="http://buff.ly/1rKwfTA">Zappos just abolished bosses. Inside tech&rsquo;s latest management craze</a></li>
<li><a href="http://buff.ly/1o3tANi">Polymer vs. X-Tag &ndash; Here&rsquo;s the difference</a></li>
<li><a href="http://buff.ly/1nIIf4L">Express to Hapi.js</a></li>
<li><a href="http://natureofcode.com/">A book focused on the programming strategies and techniques behind computer simulations of natural systems using the programming language Processing.</a></li>
<li><a href="http://www.fig.sh/index.html">Fast, isolated development environments using Docker</a></li>
<li><a href="https://wiki.php.net/rfc/php6#vote">The next major PHP version will be number 7 and not number 6</a></li>
<li><a href="https://www.braintreepayments.com/braintrust/when-rest-isnt-good-enough">When REST isn&rsquo;t good enough</a></li>
<li><a href="http://www.slideshare.net/cog/chmod-x-chmod">chmod -x chmod , a brilliant presentation on sys will answer to a tricky question</a></li>
<li><a href="https://github.com/eddiezane/lunchy">A friendly wrapper for launchctl on osx. Start your agents and go to lunch!</a></li>
<li><a href="https://www.youtube.com/watch?v=C6cQUlbJLKY">PHPUnit Best Practices</a></li>
<li><a href="http://thephp.cc/dates/2013/ez-publish-summer-camp/testable-symfony2-applications">Test{able|ing} Symfony2 Applications</a></li>
<li><a href="[https://www.youtube.com/watch?v=TejBj_N-3rI">Webinar: PhpStorm Best Practices &ndash; The Perfect Workflow for PHP Developers</a></li>
<li><a href="http://gregrickaby.com/turn-chrome-developer-tools-into-an-ide/">Turn Chrome Dev Tools into an IDE</a></li>
<li><a href="http://filamentgroup.com/lab/performance-rwd.html">How we make RWD sites load fast as heck</a></li>
<li><a href="http://markdotto.com/2014/07/23/githubs-css/">Github&rsquo;s CSS and Style Guide</a></li>
<li><a href="http://alistapart.com/blog/post/ten-css-one-liners-to-replace-native-apps">Ten CSS One-Liners to Replace Native Apps</a></li>
<li><a href="http://javascriptplayground.com/the-refactoring-tales/refactoring-tales.html">The Refactoring Tales: Efficiently Refactoring the Code</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #48]]></title>
    <link href="http://namshi.github.io/blog/2014/07/24/newsletter-number-48/"/>
    <updated>2014-07-24T12:03:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/07/24/newsletter-number-48</id>
    <content type="html"><![CDATA[<p>Guess what? TechThursday is here!</p>

<blockquote><p><em>What happened this week in the Namshi Tech team?</em></p>

<p>This week we achieved a great result: our travis builds now take just 8 minutes to run all the test suite, we are super excited about this.<br />
We will soon talk about it in a blog post, stay tuned and keep following <a href="http://twitter.com/technamshi">@TechNamshi</a></p></blockquote>

<p>Enjoy the list of super uber interesting posts on the Web!</p>

<ul>
<li><p><a href="http://buff.ly/Uf8g0e">Zalando hits €1 billion in revenue in first half of 2014</a></p></li>
<li><p><a href="http://csswizardry.com/2013/01/front-end-performance-for-web-designers-and-front-end-developers/">Front-end performance for web designers and front-end developers, long but useful article by @csswizardry about web performance, a really hot topic now.</a></p></li>
<li><p><a href="https://speakerdeck.com/mathiasbynens/3-dot-14-things-i-didnt-know-about-css-at-css-day-2014">3.14 things I didn’t know about CSS &ndash; a great presentation from CSS Day 2014</a></p></li>
<li><p><a href="https://gds.blog.gov.uk/2014/07/18/whats-the-design-process-at-gds/">What’s the design process at Governement Digital Service in UK?</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://t.co/MvNu3WXg3A">Want a sneak peek at the PHP language spec the @HipHopVM team has been working on?</a></p></li>
<li><p><a href="http://t.co/FVocuiIbur">How LinkedIn used PoPs and RUM to make dynamic content download 25% faster</a></p></li>
<li><p><a href="http://buff.ly/1qrKDjV">Elasticsearch in 15 minutes</a></p></li>
<li><p><a href="http://buff.ly/1mojG8x">gulp inject is one of the best things discovered over the past 3 months&hellip;</a></p></li>
<li><p><a href="http://buff.ly/UfOyBn">Redesigning the perfect checkout</a></p></li>
<li><p><a href="http://buff.ly/1qOqW1x">Schedule Load Tests for #APIs in the Cloud for Free</a></p></li>
<li><p><a href="http://buff.ly/1rweFjF">JadoPado InstaSearch with Algolia</a></p></li>
<li><p><a href="http://buff.ly/1yB90Mq">What happens when you search &lsquo;ugly hack&rsquo; in GitHub</a></p></li>
<li><p><a href="http://buff.ly/1qNmlN6">Programming Is Not Math</a></p></li>
<li><p><a href="http://buff.ly/Uf2USD">Riemann &ndash; A network monitoring system</a></p></li>
<li><p><a href="http://buff.ly/1qLpg8V">12 killer resources for #api practitioners</a></p></li>
<li><p><a href="http://dl.hhvm.com/resources/PHPSpec-SneakPeak.pdf">PHP specification draft from Sara Golemon</a></p></li>
<li><p><a href="http://labs.octivi.com/handling-1-billion-requests-a-week-with-symfony2/">Handling 1 Billion requests a week with Symfony2</a></p></li>
<li><p><a href="https://markwillcollins.silvrback.com/7-things-i-wish-i-knew-about-angularjs">8 Things I wish I knew about AngularJs</a></p></li>
<li><p><a href="http://highscalability.com/blog/2014/7/14/bitly-lessons-learned-building-a-distributed-system-that-han.html">Bitly: Lessons Learned Building A Distributed System That Handles 6 Billion Clicks A Month</a></p></li>
<li><p><a href="https://github.com/fgrehm/vagrant-notify">Vagrant Notify &ndash; forward notify-send from vagrant host machine</a></p></li>
<li><p><a href="http://xmpp.org/about-xmpp/technology-overview/">XMPP: The Extensible Messaging and Presence Protocol overview</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/more-responsive-single-page-applications-with-angularjs-socketio-creating-the-library--cms-21738">More Responsive Single-Page Applications With AngularJS &amp; Socket.IO: Creating the Library</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/refactoring-legacy-code-part-9-analyzing-concerns--cms-21760">Refactoring Legacy Code: Part 9 &ndash; Analyzing Concerns</a></p></li>
<li><p><a href="http://templatespicy.com/2014/15-best-php-frameworks-2014/">15 best PHP frameworks in 2014</a></p></li>
<li><p><a href="http://visualping.io/">Get notified on visual changes of a website or website area</a></p></li>
<li><p><a href="http://pagekit.com/blog/2014/07/21/pagekit-public-alpha-launch">Pagekit, a new, modern CMS built with Symfony components</a></p></li>
<li><p><a href="http://vexxhost.com/blog/small-dive-into-meteor-js/">Small dive into Meteor.js</a></p></li>
<li><p><a href="http://9to5mac.com/2014/07/11/apple-launches-blog-to-highlight-new-swift-programming-language">Apple launches blog to highlight new Swift programming language</a></p></li>
<li><p><a href="https://blog.codecentric.de/en/2014/06/10-early-thoughts-swift-programming-language">10 Early Thoughts on the Swift Programming Language</a></p></li>
<li><p><a href="http://www.fastcolabs.com/3031400/whats-new-and-different-about-apples-new-swift-programming-language">The New And Different About Apple&rsquo;s New Swift Programming Language</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #47]]></title>
    <link href="http://namshi.github.io/blog/2014/07/17/newsletter-number-47/"/>
    <updated>2014-07-17T12:03:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/07/17/newsletter-number-47</id>
    <content type="html"><![CDATA[<p>TechThursday is here!</p>

<blockquote><p><em>What happened this week in the Namshi Tech team?</em></p>

<p>This week our teammate <a href="http://tech.namshi.com/team/#Nikita%20Nefedov">nikita</a> got the time to work a bit on <a href="https://github.com/namshi/jose">namshi/jose</a>, and we ended up releasing version 1.1.1!<br />
<strong>Jose</strong> is a PHP library that provides a lightweight implementation of <strong>JWS</strong> (<a href="http://tools.ietf.org/html/draft-jones-json-web-signature-04">JSON Web Signature</a>) specification.</p>

<p>At the same time we are thrilled about the first <a href="http://symfony.com/blog/symfonylive-new-york-here-we-come-october-9-10">SymfonyLive New York</a>, we sent a bunch of cfps&hellip; let&rsquo;s cross our fingers!</p></blockquote>

<p>Below the usual list of interesting resources we found out this week, enjoy!</p>

<ul>
<li><p><a href="http://buff.ly/1jQCIdf">Security releases (CVE-2014-4931): #Symfony 2.3.18, 2.4.8, and 2.5.2 released</a></p></li>
<li><p><a href="http://buff.ly/1mh5zBN">httpbin: #HTTP Client Testing Service</a></p></li>
<li><p><a href="http://buff.ly/1rfPkgd">&ldquo;I Do Not Know One Person Who Is Happy at Amazon&rdquo;</a></p></li>
<li><p><a href="http://buff.ly/1mdnKYY">Digging into #Angular’s “Controller as” syntax</a></p></li>
<li><p><a href="http://buff.ly/1oTCIIf">Write your #git hooks in #PHP and keep them under git control</a></p></li>
<li><p><a href="http://buff.ly/1tAEK55">Why I’m staying with NodeJS</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://t.co/ip61zsw87v">Guy writes a page explaining X11 for mortals <em>and embeds an X11 server in the page</em>. That’s it, everybody out.</a></p></li>
<li><p><a href="http://buff.ly/1nh6IJW">Zero-downtime database migrations</a></p></li>
<li><p><a href="http://buff.ly/1qqGUyy">Amazon Zocalo &ndash; Document Storage and Sharing for the Enterprise</a></p></li>
<li><p><a href="http://buff.ly/1jhYrdw">Breach: a #browser for the #HTML5 era. Entirely written in #Javascript. Free. Modular. Hackable.</a></p></li>
<li><p><a href="https://helloreverb.com/developers/swagger">Swagger: A simple, open standard for describing REST APIs with JSON | Reverb for Developers http://t.co/WZXF4VnAH3</a></p></li>
<li><p><a href="http://www.infoq.com/presentations/8-lines-code-refactoring">8 Lines of Code: Greg Young discusses eight lines of very common code finding in them massive numbers of dependencies and difficulties, looking for ways to get rid of them.</a></p></li>
<li><p><a href="http://msdn.microsoft.com/en-us/library/dn568099.aspx#_The_Sample_Applications">Cloud Design Patterns: Prescriptive Architecture Guidance for Cloud Applications</a></p></li>
<li><p><a href="http://www.zdnet.com/developers-and-apple-open-up-on-new-swift-programming-language-7000031536">Developers and Apple open up on new Swift programming language</a></p></li>
<li><p><a href="http://williamdurand.fr/2014/07/02/resting-with-symfony-sos/">RESTing with Symfony: SOS</a></p></li>
<li><p><a href="https://github.com/jakubroztocil/httpie">HTTPie is a user-friendly cURL replacement</a></p></li>
<li><p><a href="https://zapier.com/engineering/when-rest-gets-messy/">When REST Gets Messy</a></p></li>
<li><p><a href="http://zsuraski.blogspot.co.il/2014/07/benchmarking-phpng.html?m=1">PHP-next-gen benchmark</a></p></li>
<li><p><a href="https://github.com/cjbarber/ToolsOfTheTrade">HN Tools of the Trade, 2014 edition</a></p></li>
<li><p><a href="https://medium.com/@manicho/how-a-password-changed-my-life-7af5d5f28038">How a Password changed my life</a></p></li>
<li><p><a href="http://trackjs.com/">JavaScript Error Tracking</a></p></li>
<li><p><a href="https://formcrafts.com/">Create amazing forms</a></p></li>
<li><p><a href="http://nakedsecurity.sophos.com/2014/07/16/germany-considers-replacing-email-with-typewriters-to-evade-spying">Germany considers replacing email with typewriters to evade spying</a></p></li>
<li><p><a href="https://github.com/sausheong/polyglot">A distributed web framework that allows programmers to create web applications in multiple programming languages</a></p></li>
<li><p><a href="http://vimeo.com/92087878">Zach Holman: If Only I Knew This In College!</a></p></li>
<li><p><a href="http://programmingisterrible.com/">Programming is terrible &ndash; lessons learned from a life wasted</a></p></li>
<li><p><a href="http://brikis98.blogspot.ae/2014/03/the-ultimate-guide-to-getting-started.html">The Ultimate Guide to Getting Started with the Play Framework</a></p></li>
<li><p><a href="http://www.andrisreinman.com/nodemailer-v1-0/">Nodemailer v1.0 released</a></p></li>
<li><p><a href="http://blog.newrelic.com/2014/07/15/geekspeak-data/">10 Things Non-Developers Love To Say To Developers</a></p></li>
<li><p><a href="http://realm.io/news/introducing-realm">Introducing Realm &ndash; a mobile-first database</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #46]]></title>
    <link href="http://namshi.github.io/blog/2014/07/10/newsletter-number-46/"/>
    <updated>2014-07-10T10:07:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/07/10/newsletter-number-46</id>
    <content type="html"><![CDATA[<p>As usual, it&rsquo;s #TechThursday!</p>

<!-- more -->


<blockquote><p>We wanted to take a moment to share the <a href="http://www.gofundme.com/b9dfcg">fundraiser for
Joe Watkins</a>, a very
active contributor to the PHP core ecosystem, who has
recently struggled and is looking for some help.</p></blockquote>

<p>And&hellip;what about us?</p>

<p>This week we&rsquo;ve been talking about <a href="http://buff.ly/1j5avP6">rules to follow when writing OS code</a>
and are still very excited for <a href="http://namshi.github.io/team#Oluwaseun%20Obajobi">Oba</a>, who is gonna be in Las Vegas to attend
the <a href="http://tech.namshi.com/blog/2014/07/05/a-bit-of-namshi-at-the-2014-aws-re-invent/">AWS re:invent</a> later this year.</p>

<p>Hungry for tech news and tutorials, the team has collected this amazing list of
resources over the past weeK:</p>

<ul>
<li><a href="http://techcrunch.com/2014/07/07/programmer-craig-muth-kickstarts-a-new-version-of-his-arguably-amazing-shell-xiki/">Programmer Craig Muth Kickstarts A New Version Of His (Arguably Amazing) Shell, Xiki</a></li>
<li><a href="http://startuptabs.com/">Startup Tabs, Discover a new startup on each new tab</a></li>
<li><a href="http://nakedsecurity.sophos.com/2014/07/07/remember-macro-viruses-infected-word-and-excel-files-theyre-back/">Remember macro viruses? Infected Word and Excel files? They&rsquo;re back&hellip;</a></li>
<li><a href="http://brikis98.blogspot.ae/2014/05/dont-learn-to-code-learn-to-think.html">Don&rsquo;t learn to code. Learn to think.</a></li>
<li><a href="https://www.apichangelog.com/">API Changelog monitors the docs of APIs you depend on and sends you notifications when they change</a></li>
<li><a href="https://medium.com/code-adventures/4ba9e7f3e52b">Farewell NodeJs, Hello Go</a></li>
<li><a href="http://www.google.com/design/">Design @ Google</a></li>
<li><a href="http://www.techempower.com/benchmarks/">Web Framework Benchmarks</a></li>
<li><a href="http://buff.ly/1jZU0ip">Rob Pike&rsquo;s Rules of Programming</a></li>
<li><a href="http://www.mysqlperformanceblog.com/2014/07/08/timestamp-columns-amazon-rds-5-6-and-you/">TIMESTAMP Columns, Amazon RDS 5.6, and You</a></li>
<li><a href="http://flux7.com/blogs/uncategorized/examining-elastic-load-balancing-policies/?utm_source=Flux7+Blog+Subscriptions&amp;utm_medium=email&amp;utm_campaign=74cd5ecda2-RSS_EMAIL_CAMPAIGN&amp;utm_term=0_3f65e75df7-74cd5ecda2-108386453">Examining Elastic Load Balancing Policies</a></li>
<li><a href="https://simplytestable.com/">Automated front-end web testing</a></li>
<li><a href="https://xpect.io/">Xpect.io helps you monitor any piece of code as fast as copy-pasting, so you can be assured that what you did yesterday, is still working today. Get instantly notified so problems can be contained before they adversely affect your business</a></li>
<li><a href="https://www.getstacker.com">Stacker:&ndash; The Easiest way to Publish &amp; Reply on Social Media</a></li>
<li><a href="https://appthwack.com">AppThwack:&ndash; Test your app on 100s of real Android and iOS devices in the cloud</a></li>
<li><a href="https://www.twilert.com/">Twilert:&ndash; Get realtime alerts via email when your brand names, keywords or hashtags are mentioned on Twitter </a></li>
<li><a href="http://blog.pagerduty.com/2014/06/10-common-ops-mistakes/">10 Common Ops Mistakes</a></li>
<li><a href="http://techblog.netflix.com/2014/06/announcing-security-monkey-aws-security.html">Netflix introduces new Security Monkey</a></li>
<li><a href="https://github.com/whummer/toaster">Toaster:&ndash; Automated testing of Infrastructure as Code automation scripts (e.g., Chef)</a></li>
<li><a href="http://www.ibm.com/developerworks/library/d-security-considerations-devops-adoption/index.html">Security considerations for DevOps adoption</a></li>
<li><a href="http://buff.ly/1qcuj20">HTTP API Design guide</a></li>
<li><a href="http://buff.ly/1zkxbzU">So you want to be a PHP Developer?</a></li>
<li><a href="http://buff.ly/1qOTAD4">Google Has Given #HTTPS a Huge Boost</a></li>
<li><a href="http://buff.ly/1jhGmfT">The Next Big #Programming Language You’ve Never Heard Of</a></li>
<li><a href="http://buff.ly/1ou121C">Inbox — The next-generation email platform</a></li>
<li><a href="http://buff.ly/1j99JRc">New Low Cost EC2 Instances with Burstable Performance</a></li>
<li><a href="http://buff.ly/1q4ZA6Y">Call me maybe: Elasticsearch gotchas</a></li>
<li><a href="http://jsmodules.io">A Guide to JavaScript Modules</a></li>
<li><a href="http://journal.crushlovely.com/post/89978453593/7-patterns-to-refactor-javascript-applications-query">7 Patterns to Refactor JavaScript Applications: Query Objects</a></li>
<li><a href="http://davidandsuzi.com/using-react-for-faster-renders-and-isomorphism-in-angular">Using React for Faster Renders and Isomosphism in Angular</a></li>
<li><a href="http://css-tricks.com/fixing-tables-long-strings/">Understanding Fixed Table Layout in CSS</a></li>
<li><a href="http://ariya.ofilabs.com/2014/07/extracting-parts-of-git-repository-and-keeping-the-history.html">Extracting Parts of Git Repository and Keeping the History</a></li>
<li><a href="http://www.smashingmagazine.com/2014/07/08/breakpoints-and-the-future-websites">Breakpoints And The Future Of Websites</a></li>
<li><a href="http://keyholesoftware.com/2014/07/07/lessons-in-automated-testing">Lessons Learned in Automated Testing</a></li>
<li><a href="http://strongloop.com/strongblog/automatic-node-js-clustering-with-log-aggregation">Automatic Node.js Clustering with Log Aggregation </a></li>
<li><a href="http://javascript.crockford.com/tdop/tdop.html">Top Down Operator Precedence</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A bit of Namshi at the 2014 AWS re:invent]]></title>
    <link href="http://namshi.github.io/blog/2014/07/05/a-bit-of-namshi-at-the-2014-aws-re-invent/"/>
    <updated>2014-07-05T20:54:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/07/05/a-bit-of-namshi-at-the-2014-aws-re-invent</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://ztona.net/wp-content/uploads/2014/06/476d57951db8e5b93f7cac1fe923c506.png" width="120"></p>

<p>It&rsquo;s gonna be a great time in Las Vegas for
<a href="http://namshi.github.io/team#Oluwaseun%20Obajobi">Oba</a>, our Lead
System Administrator, who is going to attend
the 2014 edition of <a href="https://reinvent.awsevents.com/">AWS re:invent</a>,
the international event for the cloud lovers.</p>

<!-- more -->


<p>re:invent, which is gonna gather professionals from
all over the world, is definitely going to be a great
source of inspiration for our systems, and we&rsquo;re
very happy to have someone who will be able
to get a closer look at best practices, processes
and tools in the industry; to learn from the community
and the industry leaders is something we value very
much, here at Namshi.</p>

<p>Never heard of re:invent before?</p>

<ul>
<li>the largest gathering of the AWS community</li>
<li>sessions spread over <a href="https://reinvent.awsevents.com/sessions.html">20 topics</a></li>
<li><a href="https://reinvent.awsevents.com/training.html#bootLink">bootcamps</a></li>
<li>new AWS products get usually announced there</li>
<li>on-the-spot <a href="https://reinvent.awsevents.com/training.html#certLink">certifications</a></li>
</ul>


<p>We wish Oba a safe trip there&hellip;   &hellip;and have
a blast in the States!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #45]]></title>
    <link href="http://namshi.github.io/blog/2014/07/03/newsletter-number-45/"/>
    <updated>2014-07-03T11:30:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/07/03/newsletter-number-45</id>
    <content type="html"><![CDATA[<p>Welcome to <strong>TechThursday</strong>!</p>

<h2>Announcements</h2>

<p>This week we say <a href="http://tech.namshi.com/blog/2014/07/02/goodbye-lucianino/">goodbye</a> to @luciano, you will be missed!</p>

<p>We&rsquo;ve been working on <a href="https://github.com/namshi/clusterjs">clusterjs</a>! Take a look at the <a href="http://tech.namshi.com/blog/2014/06/27/clusterjs-clusterify-your-nodejs-applications-and-achieve-zero-downtime-deployments/">blog post</a> Today we released version 0.7!</p>

<p>Our @Cirpo will be speaking at the PHP North East Conference in Boston in a September! Read about his presentation <a href="http://tech.namshi.com/blog/2014/06/29/the-namshees-invade-the-usa-dot-dot-dot-dot-dot-dot-with-php/">here</a></p>

<h2>Newsletter</h2>

<ul>
<li><a href="https://github.com/codemix/fast.js">Faster user-land re-implementations for several common built-in native JavaScript functions</a></li>
<li><a href="http://blog.embed.ly/post/89265229166/what-twitter-isnt-telling-you-about-gifs">What Twitter Isn’t Telling You About GIFs</a></li>
<li><a href="http://www.breefield.com/essays/affiliate">How I Made $3,000 with 90 Lines of Code</a></li>
<li><a href="http://www.akamai.com/worldcup">Akamai delivers for the world cup</a></li>
<li><a href="http://symfony.com/blog/first-online-symfony-community-hack-day-july-5th">First Online Symfony Community Hack Day: July 5th!</a></li>
<li><a href="http://ng-inspector.org/">ng-inspect like a boss</a></li>
<li><a href="http://www.smashingmagazine.com/2014/06/27/communicating-effectively-in-projects/">How To Communicate Effectively in IT Projects</a></li>
<li><a href="http://blog.arvidandersson.se/2014/06/17/best-practices-in-modern-web-projects">Best practices in modern web projects</a></li>
<li><a href="http://daemon.io/">PHP Deamon &ndash; Asynchronous server-side framework for Web and network applications implemented in PHP</a></li>
<li><a href="http://phansible.com/">An easy to use interface that helps you generate Ansible Playbooks for PHP based projects</a></li>
<li><a href="http://serversforhackers.com/editions/2014/07/01/ssh-tricks/">SSH Tricks</a></li>
<li><a href="http://shields.io/">GitHub badges as a service</a></li>
<li><a href="http://php-and-symfony.matthiasnoback.nl/2014/01/php-the-future-of-packages">PHP &ndash; The Future of Packages</a></li>
<li><a href="http://code.tutsplus.com/tutorials/refactoring-legacy-code-part-7-identifying-the-presentation-layer--cms-21593">Refactoring Legacy Code: Part 7 &ndash; Identifying the Presentation Layer</a></li>
<li><a href="http://www.slideshare.net/cakper/2014-0407-php-spec-the-only-design-tool-you-need-4developers">PHPSpec &ndash; the only Design Tool you need</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye Lucianino!]]></title>
    <link href="http://namshi.github.io/blog/2014/07/02/goodbye-lucianino/"/>
    <updated>2014-07-02T22:37:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/07/02/goodbye-lucianino</id>
    <content type="html"><![CDATA[<p>This week one of our teammates left the team
to pursuit his next big challenge: we are talking
about <a href="http://tech.namshi.com/team/#Luciano%20Amodio">Luciano</a>
who is now in Spain, hacking, as usual, with
JavaScript.</p>

<!-- more -->


<p><em>Lucianino</em>, as we liked to call him, has been
instrumental in kicking off
our whole &ldquo;frontend&rdquo; department, and we have been
very happy to have him here, introducing us to
the magical world of AngularJS, Grunt (even though
we now use Gulp) and Single-Page Apps.</p>

<p>While at Namshi, we&rsquo;ve seen him transitioning
from the (traditional) world of PHP to JavaScript
and even giving his very <a href="http://www.slideshare.net/adamquadmon/angular-js-mobile-jsday-2014-verona-14-may">first talk at a conference</a>.</p>

<p>We really want to thank him for what he has done
in the past 12 months at Namshi and wish him
good luck for his next adventure!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Namshees invade the USA...   ...with PHP (and many more)!]]></title>
    <link href="http://namshi.github.io/blog/2014/06/29/the-namshees-invade-the-usa-dot-dot-dot-dot-dot-dot-with-php/"/>
    <updated>2014-06-29T22:58:00+04:00</updated>
    <id>http://namshi.github.io/blog/2014/06/29/the-namshees-invade-the-usa-dot-dot-dot-dot-dot-dot-with-php</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re a geek somewhere around Boston, in September,
you definitely don&rsquo;t want to miss the
<a href="http://www.northeastphp.org/">PHP North East</a>
conference, which has an amazing lineup of
<a href="http://www.northeastphp.org/speakers">speakers</a>
and <a href="http://www.northeastphp.org/speakers/view/176/Alessandro-Cinelli">a surprise</a>
from Dubai.</p>

<!-- more -->


<p><img class="left" src="http://2014.phpday.it/wp-content/uploads/2014/03/cirpo.jpeg" width="250"></p>

<p>Among the plethora of <a href="http://www.northeastphp.org/agenda">interesting talks</a>
there will be a (definitely) fun one, &ldquo;<a href="http://www.northeastphp.org/talks/view/352/PHP-is-the-king-nodejs-is-the-prince-and-Lua-is-the-fool">PHP is the king, NodeJS the price and Lua
is the fool</a>&rdquo;
given by our <a href="http://tech.namshi.com/team/#Alessandro%20Cinelli%20(cirpo)">Cirpo</a> who will entertain the crowd with some
details on how we mesh a whole lot of languages and platforms
together.</p>

<p>Namshi&rsquo;s SOA is currently running on at least 4 different
application platforms and Cirpo took the opportunity to share some insights
about how we are doing it: it will be a <em>hands-on</em> talk focused on
decision-making, benefits and pitfalls of running such a heterogeneous
architecture and how crazy ideas (like flirting with Lua) could be a
game-changer in your next long-term project.</p>

<p>Cirpo is no newbie to the world of speaking, as he already delivered
a few talks in the past and, <a href="https://joind.in/user/view/956">judging by the ratings</a>,
has a track record of nothing but success. Being a leader, at Namshi, doesn&rsquo;t mean
to only set the tone for our team, but also to confront with the community,
explain (and validate) our infrastructure and learn from the feedbacks we get back:
Cirpo knows that very well and this will be a great experience from this
standpoint.</p>

<p>We wish him a safe trip to the U.S. and wish <strong>you</strong> can
attend his talk!</p>
]]></content>
  </entry>
  
</feed>
