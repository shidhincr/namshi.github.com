<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tech @ Namshi.com]]></title>
  <link href="http://tech.namshi.com/atom.xml" rel="self"/>
  <link href="http://tech.namshi.com/"/>
  <updated>2014-07-10T10:59:27+04:00</updated>
  <id>http://tech.namshi.com/</id>
  <author>
    <name><![CDATA[Namshi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Newsletter #46]]></title>
    <link href="http://tech.namshi.com/blog/2014/07/10/newsletter-number-46/"/>
    <updated>2014-07-10T10:07:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/07/10/newsletter-number-46</id>
    <content type="html"><![CDATA[<p>As usual, it&rsquo;s #TechThursday!</p>

<!-- more -->


<blockquote><p>We wanted to take a moment to share the <a href="http://www.gofundme.com/b9dfcg">fundraiser for
Joe Watkins</a>, a very
active contributor to the PHP core ecosystem, who has
recently struggled and is looking for some help.</p></blockquote>

<p>And&hellip;what about us?</p>

<p>This week we&rsquo;ve been talking about <a href="http://buff.ly/1j5avP6">rules to follow when writing OS code</a>
and are still very excited for <a href="http://tech.namshi.com/team#Oluwaseun%20Obajobi">Oba</a>, who is gonna be in Las Vegas to attend
the <a href="http://tech.namshi.com/blog/2014/07/05/a-bit-of-namshi-at-the-2014-aws-re-invent/">AWS re:invent</a> later this year.</p>

<p>Hungry for tech news and tutorials, the team has collected this amazing list of
resources over the past weeK:</p>

<ul>
<li><a href="http://techcrunch.com/2014/07/07/programmer-craig-muth-kickstarts-a-new-version-of-his-arguably-amazing-shell-xiki/">Programmer Craig Muth Kickstarts A New Version Of His (Arguably Amazing) Shell, Xiki</a></li>
<li><a href="http://startuptabs.com/">Startup Tabs, Discover a new startup on each new tab</a></li>
<li><a href="http://nakedsecurity.sophos.com/2014/07/07/remember-macro-viruses-infected-word-and-excel-files-theyre-back/">Remember macro viruses? Infected Word and Excel files? They&rsquo;re back&hellip;</a></li>
<li><a href="http://brikis98.blogspot.ae/2014/05/dont-learn-to-code-learn-to-think.html">Don&rsquo;t learn to code. Learn to think.</a></li>
<li><a href="https://www.apichangelog.com/">API Changelog monitors the docs of APIs you depend on and sends you notifications when they change</a></li>
<li><a href="https://medium.com/code-adventures/4ba9e7f3e52b">Farewell NodeJs, Hello Go</a></li>
<li><a href="http://www.google.com/design/">Design @ Google</a></li>
<li><a href="http://www.techempower.com/benchmarks/">Web Framework Benchmarks</a></li>
<li><a href="http://buff.ly/1jZU0ip">Rob Pike&rsquo;s Rules of Programming</a></li>
<li><a href="http://www.mysqlperformanceblog.com/2014/07/08/timestamp-columns-amazon-rds-5-6-and-you/">TIMESTAMP Columns, Amazon RDS 5.6, and You</a></li>
<li><a href="http://flux7.com/blogs/uncategorized/examining-elastic-load-balancing-policies/?utm_source=Flux7+Blog+Subscriptions&amp;utm_medium=email&amp;utm_campaign=74cd5ecda2-RSS_EMAIL_CAMPAIGN&amp;utm_term=0_3f65e75df7-74cd5ecda2-108386453">Examining Elastic Load Balancing Policies</a></li>
<li><a href="https://simplytestable.com/">Automated front-end web testing</a></li>
<li><a href="https://xpect.io/">Xpect.io helps you monitor any piece of code as fast as copy-pasting, so you can be assured that what you did yesterday, is still working today. Get instantly notified so problems can be contained before they adversely affect your business</a></li>
<li><a href="https://www.getstacker.com">Stacker:&ndash; The Easiest way to Publish &amp; Reply on Social Media</a></li>
<li><a href="https://appthwack.com">AppThwack:&ndash; Test your app on 100s of real Android and iOS devices in the cloud</a></li>
<li><a href="https://www.twilert.com/">Twilert:&ndash; Get realtime alerts via email when your brand names, keywords or hashtags are mentioned on Twitter </a></li>
<li><a href="http://blog.pagerduty.com/2014/06/10-common-ops-mistakes/">10 Common Ops Mistakes</a></li>
<li><a href="http://techblog.netflix.com/2014/06/announcing-security-monkey-aws-security.html">Netflix introduces new Security Monkey</a></li>
<li><a href="https://github.com/whummer/toaster">Toaster:&ndash; Automated testing of Infrastructure as Code automation scripts (e.g., Chef)</a></li>
<li><a href="http://www.ibm.com/developerworks/library/d-security-considerations-devops-adoption/index.html">Security considerations for DevOps adoption</a></li>
<li><a href="http://buff.ly/1qcuj20">HTTP API Design guide</a></li>
<li><a href="http://buff.ly/1zkxbzU">So you want to be a PHP Developer?</a></li>
<li><a href="http://buff.ly/1qOTAD4">Google Has Given #HTTPS a Huge Boost</a></li>
<li><a href="http://buff.ly/1jhGmfT">The Next Big #Programming Language You’ve Never Heard Of</a></li>
<li><a href="http://buff.ly/1ou121C">Inbox — The next-generation email platform</a></li>
<li><a href="http://buff.ly/1j99JRc">New Low Cost EC2 Instances with Burstable Performance</a></li>
<li><a href="http://buff.ly/1q4ZA6Y">Call me maybe: Elasticsearch gotchas</a></li>
<li><a href="http://jsmodules.io">A Guide to JavaScript Modules</a></li>
<li><a href="http://journal.crushlovely.com/post/89978453593/7-patterns-to-refactor-javascript-applications-query">7 Patterns to Refactor JavaScript Applications: Query Objects</a></li>
<li><a href="http://davidandsuzi.com/using-react-for-faster-renders-and-isomorphism-in-angular">Using React for Faster Renders and Isomosphism in Angular</a></li>
<li><a href="http://css-tricks.com/fixing-tables-long-strings/">Understanding Fixed Table Layout in CSS</a></li>
<li><a href="http://ariya.ofilabs.com/2014/07/extracting-parts-of-git-repository-and-keeping-the-history.html">Extracting Parts of Git Repository and Keeping the History</a></li>
<li><a href="http://www.smashingmagazine.com/2014/07/08/breakpoints-and-the-future-websites">Breakpoints And The Future Of Websites</a></li>
<li><a href="http://keyholesoftware.com/2014/07/07/lessons-in-automated-testing">Lessons Learned in Automated Testing</a></li>
<li><a href="http://strongloop.com/strongblog/automatic-node-js-clustering-with-log-aggregation">Automatic Node.js Clustering with Log Aggregation </a></li>
<li><a href="http://javascript.crockford.com/tdop/tdop.html">Top Down Operator Precedence</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A bit of Namshi at the 2014 AWS re:invent]]></title>
    <link href="http://tech.namshi.com/blog/2014/07/05/a-bit-of-namshi-at-the-2014-aws-re-invent/"/>
    <updated>2014-07-05T20:54:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/07/05/a-bit-of-namshi-at-the-2014-aws-re-invent</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://ztona.net/wp-content/uploads/2014/06/476d57951db8e5b93f7cac1fe923c506.png" width="120"></p>

<p>It&rsquo;s gonna be a great time in Las Vegas for
<a href="http://tech.namshi.com/team#Oluwaseun%20Obajobi">Oba</a>, our Lead
System Administrator, who is going to attend
the 2014 edition of <a href="https://reinvent.awsevents.com/">AWS re:invent</a>,
the international event for the cloud lovers.</p>

<!-- more -->


<p>re:invent, which is gonna gather professionals from
all over the world, is definitely going to be a great
source of inspiration for our systems, and we&rsquo;re
very happy to have someone who will be able
to get a closer look at best practices, processes
and tools in the industry; to learn from the community
and the industry leaders is something we value very
much, here at Namshi.</p>

<p>Never heard of re:invent before?</p>

<ul>
<li>the largest gathering of the AWS community</li>
<li>sessions spread over <a href="https://reinvent.awsevents.com/sessions.html">20 topics</a></li>
<li><a href="https://reinvent.awsevents.com/training.html#bootLink">bootcamps</a></li>
<li>new AWS products get usually announced there</li>
<li>on-the-spot <a href="https://reinvent.awsevents.com/training.html#certLink">certifications</a></li>
</ul>


<p>We wish Oba a safe trip there&hellip;   &hellip;and have
a blast in the States!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #45]]></title>
    <link href="http://tech.namshi.com/blog/2014/07/03/newsletter-number-45/"/>
    <updated>2014-07-03T11:30:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/07/03/newsletter-number-45</id>
    <content type="html"><![CDATA[<p>Welcome to <strong>TechThursday</strong>!</p>

<h2>Announcements</h2>

<p>This week we say <a href="http://tech.namshi.com/blog/2014/07/02/goodbye-lucianino/">goodbye</a> to @luciano, you will be missed!</p>

<p>We&rsquo;ve been working on <a href="https://github.com/namshi/clusterjs">clusterjs</a>! Take a look at the <a href="http://tech.namshi.com/blog/2014/06/27/clusterjs-clusterify-your-nodejs-applications-and-achieve-zero-downtime-deployments/">blog post</a> Today we released version 0.7!</p>

<p>Our @Cirpo will be speaking at the PHP North East Conference in Boston in a couple of days! Read about his presentation <a href="http://tech.namshi.com/blog/2014/06/29/the-namshees-invade-the-usa-dot-dot-dot-dot-dot-dot-with-php/">here</a></p>

<h2>Newsletter</h2>

<ul>
<li><a href="https://github.com/codemix/fast.js">Faster user-land re-implementations for several common built-in native JavaScript functions</a></li>
<li><a href="http://blog.embed.ly/post/89265229166/what-twitter-isnt-telling-you-about-gifs">What Twitter Isn’t Telling You About GIFs</a></li>
<li><a href="http://www.breefield.com/essays/affiliate">How I Made $3,000 with 90 Lines of Code</a></li>
<li><a href="http://www.akamai.com/worldcup">Akamai delivers for the world cup</a></li>
<li><a href="http://symfony.com/blog/first-online-symfony-community-hack-day-july-5th">First Online Symfony Community Hack Day: July 5th!</a></li>
<li><a href="http://ng-inspector.org/">ng-inspect like a boss</a></li>
<li><a href="http://www.smashingmagazine.com/2014/06/27/communicating-effectively-in-projects/">How To Communicate Effectively in IT Projects</a></li>
<li><a href="http://blog.arvidandersson.se/2014/06/17/best-practices-in-modern-web-projects">Best practices in modern web projects</a></li>
<li><a href="http://daemon.io/">PHP Deamon &ndash; Asynchronous server-side framework for Web and network applications implemented in PHP</a></li>
<li><a href="http://phansible.com/">An easy to use interface that helps you generate Ansible Playbooks for PHP based projects</a></li>
<li><a href="http://serversforhackers.com/editions/2014/07/01/ssh-tricks/">SSH Tricks</a></li>
<li><a href="http://shields.io/">GitHub badges as a service</a></li>
<li><a href="http://php-and-symfony.matthiasnoback.nl/2014/01/php-the-future-of-packages">PHP &ndash; The Future of Packages</a></li>
<li><a href="http://code.tutsplus.com/tutorials/refactoring-legacy-code-part-7-identifying-the-presentation-layer--cms-21593">Refactoring Legacy Code: Part 7 &ndash; Identifying the Presentation Layer</a></li>
<li><a href="http://www.slideshare.net/cakper/2014-0407-php-spec-the-only-design-tool-you-need-4developers">PHPSpec &ndash; the only Design Tool you need</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye Lucianino!]]></title>
    <link href="http://tech.namshi.com/blog/2014/07/02/goodbye-lucianino/"/>
    <updated>2014-07-02T22:37:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/07/02/goodbye-lucianino</id>
    <content type="html"><![CDATA[<p>This week one of our teammates left the team
to pursuit his next big challenge: we are talking
about <a href="http://tech.namshi.com/team/#Luciano%20Amodio">Luciano</a>
who is now in Spain, hacking, as usual, with
JavaScript.</p>

<!-- more -->


<p><em>Lucianino</em>, as we liked to call him, has been
instrumental in kicking off
our whole &ldquo;frontend&rdquo; department, and we have been
very happy to have him here, introducing us to
the magical world of AngularJS, Grunt (even though
we now use Gulp) and Single-Page Apps.</p>

<p>While at Namshi, we&rsquo;ve seen him transitioning
from the (traditional) world of PHP to JavaScript
and even giving his very <a href="http://www.slideshare.net/adamquadmon/angular-js-mobile-jsday-2014-verona-14-may">first talk at a conference</a>.</p>

<p>We really want to thank him for what he has done
in the past 12 months at Namshi and wish him
good luck for his next adventure!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Namshees invade the USA...   ...with PHP (and many more)!]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/29/the-namshees-invade-the-usa-dot-dot-dot-dot-dot-dot-with-php/"/>
    <updated>2014-06-29T22:58:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/29/the-namshees-invade-the-usa-dot-dot-dot-dot-dot-dot-with-php</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re a geek somewhere around Boston, in September,
you definitely don&rsquo;t want to miss the
<a href="http://www.northeastphp.org/">PHP North East</a>
conference, which has an amazing lineup of
<a href="http://www.northeastphp.org/speakers">speakers</a>
and <a href="http://www.northeastphp.org/speakers/view/176/Alessandro-Cinelli">a surprise</a>
from Dubai.</p>

<!-- more -->


<p><img class="left" src="http://2014.phpday.it/wp-content/uploads/2014/03/cirpo.jpeg" width="250"></p>

<p>Among the plethora of <a href="http://www.northeastphp.org/agenda">interesting talks</a>
there will be a (definitely) fun one, &ldquo;<a href="http://www.northeastphp.org/talks/view/352/PHP-is-the-king-nodejs-is-the-prince-and-Lua-is-the-fool">PHP is the king, NodeJS the price and Lua
is the fool</a>&rdquo;
given by our <a href="http://tech.namshi.com/team/#Alessandro%20Cinelli%20(cirpo)">Cirpo</a> who will entertain the crowd with some
details on how we mesh a whole lot of languages and platforms
together.</p>

<p>Namshi&rsquo;s SOA is currently running on at least 4 different
application platforms and Cirpo took the opportunity to share some insights
about how we are doing it: it will be a <em>hands-on</em> talk focused on
decision-making, benefits and pitfalls of running such a heterogeneous
architecture and how crazy ideas (like flirting with Lua) could be a
game-changer in your next long-term project.</p>

<p>Cirpo is no newbie to the world of speaking, as he already delivered
a few talks in the past and, <a href="https://joind.in/user/view/956">judging by the ratings</a>,
has a track record of nothing but success. Being a leader, at Namshi, doesn&rsquo;t mean
to only set the tone for our team, but also to confront with the community,
explain (and validate) our infrastructure and learn from the feedbacks we get back:
Cirpo knows that very well and this will be a great experience from this
standpoint.</p>

<p>We wish him a safe trip to the U.S. and wish <strong>you</strong> can
attend his talk!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ClusterJS, clusterify your NodeJS applications and achieve zero-downtime deployments]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/27/clusterjs-clusterify-your-nodejs-applications-and-achieve-zero-downtime-deployments/"/>
    <updated>2014-06-27T00:45:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/27/clusterjs-clusterify-your-nodejs-applications-and-achieve-zero-downtime-deployments</id>
    <content type="html"><![CDATA[<p>NodeJS has a very nice built-in support for clusters
through its native <a href="http://nodejs.org/api/cluster.html">cluster module</a>:
by using it and realizing we wanted to achieve zero-downtime
deployments (ZDD) on our node apps we decided to kick in.</p>

<!-- more -->


<p>This afternoon <a href="http://tech.namshi.com/team#Luciano%20Colosio">Lucio</a> came up to me
and asked me a simple question:</p>

<blockquote><p>Let&rsquo;s do some NodeJS today?</p></blockquote>

<p>and my answer was clear and simple: we need a robust solution
for ZDD, let&rsquo;s do this.</p>

<p>Before jumping with our usual <code>git init</code> and <code>npm init</code>
we searched a bit and found a few alternatives, which
weren&rsquo;t exactly fitting our scenarios:</p>

<ul>
<li><a href="http://learnboost.github.io/cluster/">learnboost/cluster</a>, which is
quite old, discontinued and hasn&rsquo;t been updated in a couple of years</li>
<li><a href="https://github.com/isaacs/cluster-master">isaacs/cluster-master</a>, which
seems to have a whole lot of great things but we wanted to have
the startup script as a global command rather than having to write
a script on our own (but we might wrap it, as it
has a lot of cool features, like resizing your cluster)</li>
</ul>


<p>At the end we decided to go for a simple solution after reading
<a href="http://jaxbot.me/articles/zero_downtime_nodejs_reloads_with_clusters_7_5_2013">this post from Jax</a>
that explains how to achieve ZDD on NodeJS.</p>

<p>In a few, very productive hours, Lucio was able to write
<a href="https://www.npmjs.org/package/clusterjs">ClusterJS</a> and
we decided to release it to the public, as it might
be interesting out there (and because we really like
to receive feedbacks!).</p>

<p>Suppose you have a typical <a href="http://expressjs.com/">ExpressJS</a>
app that runs through an <code>app.js</code> script, in order to run it through
ClusterJS you simply have to:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install -g clusterjs
</span><span class='line'>
</span><span class='line'>clusterjs path/to/app.js</span></code></pre></td></tr></table></div></figure>


<p>At this point you should be able to see something like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>~/projects/clusterjs (master ✔) ᐅ clusterjs test/testApp/app.js
</span><span class='line'>
</span><span class='line'>Booting a cluster of ./test/testApp/app.js
</span><span class='line'>We are gonna be launching 4 workers
</span><span class='line'>The cluster will reload on: SIGUSR2
</span><span class='line'>--- test app loaded as pid: 21543
</span><span class='line'>--- test app loaded as pid: 21544
</span><span class='line'>--- test app loaded as pid: 21546
</span><span class='line'>--- test app loaded as pid: 21547
</span><span class='line'>Worker 1 running!
</span><span class='line'>Worker 2 running!
</span><span class='line'>Worker 3 running!
</span><span class='line'>Worker 4 running!</span></code></pre></td></tr></table></div></figure>


<p>Cool! You have just put your app in a cluster with four workers!</p>

<p>By default, ClusterJS will boot as many workers as CPUs
in your system; if you wanna change it, simply:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>~/projects/clusterjs (master ✔) ᐅ clusterjs test/testApp/app.js --workers 10
</span><span class='line'>
</span><span class='line'>Booting a cluster of ./test/testApp/app.js
</span><span class='line'>We are gonna be launching 10 workers
</span><span class='line'>The cluster will reload on: SIGUSR2
</span><span class='line'>--- test app loaded as pid: 21636
</span><span class='line'>--- test app loaded as pid: 21635
</span><span class='line'>Worker 2 running!
</span><span class='line'>Worker 1 running!
</span><span class='line'>--- test app loaded as pid: 21650
</span><span class='line'>--- test app loaded as pid: 21640
</span><span class='line'>Worker 9 running!
</span><span class='line'>--- test app loaded as pid: 21639
</span><span class='line'>--- test app loaded as pid: 21641
</span><span class='line'>Worker 4 running!
</span><span class='line'>--- test app loaded as pid: 21644
</span><span class='line'>Worker 5 running!
</span><span class='line'>Worker 3 running!
</span><span class='line'>Worker 6 running!
</span><span class='line'>--- test app loaded as pid: 21648
</span><span class='line'>--- test app loaded as pid: 21646
</span><span class='line'>Worker 8 running!
</span><span class='line'>--- test app loaded as pid: 21652
</span><span class='line'>Worker 7 running!
</span><span class='line'>Worker 10 running!</span></code></pre></td></tr></table></div></figure>


<p>How to achieve ZDD? Simply issue a SIGUSR2 command
to your master process, after updating the files
in your app:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>~/projects/clusterjs (master ✔) ᐅ clusterjs test/testApp/app.js --workers 2
</span><span class='line'>Booting a cluster of ./test/testApp/app.js
</span><span class='line'>We are gonna be launching 2 workers
</span><span class='line'>The cluster will reload on: SIGUSR2
</span><span class='line'>--- test app loaded as pid: 22007
</span><span class='line'>--- test app loaded as pid: 22008
</span><span class='line'>Worker 1 running!
</span><span class='line'>Worker 2 running!
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>SIGUSR2 received, reloading the app
</span><span class='line'>*** reloading workers!
</span><span class='line'>restarting worker: 1
</span><span class='line'>Shutdown complete for worker 1
</span><span class='line'>Worker 1 died :(
</span><span class='line'>--- test app loaded as pid: 22018
</span><span class='line'>--- test app loaded as pid: 22021
</span><span class='line'>Worker 3 running!
</span><span class='line'>Worker 4 running!
</span><span class='line'>Replacement worker online.
</span><span class='line'>*** reloading workers!
</span><span class='line'>restarting worker: 2
</span><span class='line'>Shutdown complete for worker 2
</span><span class='line'>Worker 2 died :(
</span><span class='line'>--- test app loaded as pid: 22055
</span><span class='line'>--- test app loaded as pid: 22056
</span><span class='line'>Worker 5 running!
</span><span class='line'>Worker 6 running!
</span><span class='line'>Replacement worker online.</span></code></pre></td></tr></table></div></figure>


<p>If you want to change the signal used to reload the cluster,
you can do it with a simple option:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>clusterjs test/testApp/app.js --workers 2 --reloadon SIGUSR1</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s (basically) it! Kudos to Lucio for his work and&hellip;</p>

<p>&hellip;if you wanna play with ClusterJS or suggest any improvement,
feel free to have a look around, as
<a href="https://github.com/namshi/clusterjs">ClusterJS is on GitHub</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #44]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/26/newsletter-number-44/"/>
    <updated>2014-06-26T12:03:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/26/newsletter-number-44</id>
    <content type="html"><![CDATA[<p><strong>TechThursday</strong> is here folks and we have two special mentions today.</p>

<p><a href="http://tech.namshi.com/team/#Mohamad%20Hallal">Mohamad Hallal</a> wrote an awesome post about <a href="http://tech.namshi.com/blog/2014/06/24/when-you-start-working-as-a-software-developer-dot-dot-dot/">his pitfalls as junior developer</a></p>

<p><a href="http://tech.namshi.com/team/#Luciano%20Colosio">Lucio</a> released a very cool personal project: <a href="https://github.com/unlucio/carmensandiego">Carmen Sandiego</a>.
This nodejs app let&rsquo;s you visualize your Foursquare checkins on a world map!
<a href="http://tech.namshi.com/blog/2014/06/24/where-in-the-world-is-carmen-san-diego/">Check the dedicated blog post</a></p>

<p>Here the list of other useful links of the week:</p>

<ul>
<li><p><a href="http://blog.andyet.com/2014/06/25/introducing-ampersand-js">Introducing Ampersand.js, a highly modular, loosely coupled, non-frameworky framework for building advanced JavaScript apps</a></p></li>
<li><p><a href="http://the-paper-trail.org/blog/the-elephant-was-a-trojan-horse-on-the-death-of-map-reduce-at-google/">On the death of Map-Reduce at Google</a></p></li>
<li><p><a href="http://strongloop.com/strongblog/comparing-node-js-promises-trycatch-zone-js-angular/">Handling errors in asynchronous flow</a></p></li>
<li><p><a href="http://www.collectionsjs.com/">Javascript implementation of common data structures</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://elm-lang.org/">A functional reactive language for interactive applications</a></p></li>
<li><p><a href="http://plaintextoffenders.com/">Passwords in Plain text</a></p></li>
<li><p><a href="https://developers.google.com/web/starter-kit/">Google Web Started Kit</a></p></li>
<li><p><a href="http://blog.nullspace.io/recovering-deleted-files-using-only-grep.html">Recovering deleted files using only grep</a></p></li>
<li><p><a href="http://www.paperplanes.de/2014/6/20/what-blameless-postmortem-taught-me.html">Benefits of post-mortems for incidents, the need to make them blameless &ndash; and the knock on effect that has on an organisation’s culture</a></p></li>
<li><p><a href="http://blog.jaywayco.co.uk/sysops-are-end-users-too/">Why it’s important to have real users, in this case systems administrators, on the product team</a></p></li>
<li><p><a href="http://newrelic.com/devops/toolset">A Short List of DevOps Tools</a></p></li>
<li><p><a href="http://www.linuxinsider.com/story/Should-Everyone-Learn-to-Code-80634.html">Should Everyone Learn to Code?</a></p></li>
<li><p><a href="http://knplabs.com/blog/2011/10/10/give-your-projects-a-gaufrette/">Gaufrette: a PHP library that provides a filesystem abstraction layer</a></p></li>
<li><p><a href="http://marcjschmidt.de/blog/2014/02/08/php-high-performance.html">Bring High Performance Into Your PHP App</a></p></li>
<li><p><a href="http://blog.tomaka17.com/2012/12/random-tricks-when-using-angularjs/">Random tricks when using AngularJS</a></p></li>
<li><p><a href="http://infrequently.org/2013/11/long-term-web-semantics/">Long Term Web Semantics</a></p></li>
<li><p><a href="http://techcrunch.com/2014/06/19/google-launches-web-starter-kit-a-boilerplate-for-multi-screen-web-development/">Google’s New Web Starter Kit Is A Boilerplate For Multi-Screen Web Development</a></p></li>
<li><p><a href="http://www.youtube.com/playlist?list=PLOU2XLYxmsIJrr0ZjgPIR6n5PFTu7quwJ">Find out about the latest product and platform innovations at Google I/O 2014</a></p></li>
<li><p><a href="http://code.tutsplus.com/articles/quick-tip-set-relative-urls-with-the-base-tag--cms-21399">Quick Tip: set relative URLs with the “base” Tag</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/refactoring-legacy-code-part-6-attacking-complex-methods--cms-21522">Refactoring Legacy Code: Part 6 &ndash; Attacking Complex Methods</a></p></li>
<li><p><a href="http://friendsofsymfony.github.io/slides/resting-with-symfony2.html">RESTing with Symfony 2</a></p></li>
<li><p><a href="http://keyholesoftware.com/2014/06/16/code-for-maintainability/">Code for maintainability so the next developer doesn’t hate you</a></p></li>
<li><p><a href="http://bitjudo.com/blog/2014/03/13/building-efficient-dockerfiles-node-dot-js/">Docker: How speed up deployment involving npm install and bower install</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[When you start working as a software developer...]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/24/when-you-start-working-as-a-software-developer-dot-dot-dot/"/>
    <updated>2014-06-24T23:30:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/24/when-you-start-working-as-a-software-developer-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>&hellip;it&rsquo;s always a joy, full of surprises: what they don&rsquo;t tell you
is that not all of the surprises are much fun.</p>

<!-- more -->


<p>Kudos to <a href="http://tech.namshi.com/team/#Mohamad%20Hallal">Mohamad</a>
who shared his <a href="http://mohdhallal.github.io/blog/2014/06/18/my-top-10-junior-developer-pitfalls/">10 most dramatic moments as a Junior software engineer</a>
in his latest blog post: the whole team at Namshi had so much fun going through
it because:</p>

<ul>
<li>we heard him shouting at Vim</li>
<li>we&rsquo;ve all been there :)</li>
</ul>


<p>&hellip;and what about you? Which ones were your biggest #EPICFAIL?</p>

<p>On a side note, it&rsquo;s great to see how passionate engineers like
Mohamad grown on a daily basis &mdash; especially compared to the
&ldquo;old guys&rdquo; like me: one of his open source libraries,
<a href="https://github.com/namshi/mockserver">Mockserver</a>,
is definitely something you should check out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Where in the world is Carmen San Diego?]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/24/where-in-the-world-is-carmen-san-diego/"/>
    <updated>2014-06-24T23:20:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/24/where-in-the-world-is-carmen-san-diego</id>
    <content type="html"><![CDATA[<p>The team at Namshi is always on the go with some new open source project
that lights up our weekends or solves some of the small dilemmas we daily
face at work.</p>

<!-- more -->


<p>In the past days <a href="http://tech.namshi.com/team/#Luciano%20Colosio">Lucio</a>
has been working on one of his side projects and released
<a href="https://github.com/unlucio/carmensandiego">CarmenSandiego</a> on Github:
it lets you visualize your 4Square checkins on a map
<a href="https://github.com/unlucio/carmensandiego#so-heres-how-you-do-it">in a matter of a few steps</a>,
and it has been written in his beloved NodeJS.</p>

<p>Kudos to Lucio for releasing his work and&hellip;   &hellip;more to come!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #43]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/19/newsletter-number-43/"/>
    <updated>2014-06-19T12:03:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/19/newsletter-number-43</id>
    <content type="html"><![CDATA[<p><strong>TechThursday is here again!</strong></p>

<p>This week we released a new and opensource library on github: <a href="https://github.com/namshi/mockserver">Mockserver</a> for mocking apis, our fellow
<a href="http://tech.namshi.com/team/#Mohamad%20Hallal">Mohamad</a> <a href="http://tech.namshi.com/blog/2014/06/13/mockserver-effortless-api-mocking-library-in-node-js/">wrote a post about it</a>, check it!</p>

<ul>
<li><p><a href="http://wavepot.com/">Wavepot&hellip; just check and have fun with it!</a></p></li>
<li><p><a href="https://github.com/prezi/changelog">Changelog, a tool designed to answer the question “What changed in the last twenty minutes?” trough a simple HTTP api and a web interface</a></p></li>
<li><p><a href="http://blog.kicksend.com/how-we-decreased-sign-up-confirmation-email-bounces-by-50">How we decreased sign up confirmation email bounces by 50%</a></p></li>
<li><p><a href="http://welcometothebundle.com/domain-driven-design-and-symfony-for-simple-app">Domain Driven Design principles with Symfony2</a></p></li>
<li><p><a href="http://php-and-symfony.matthiasnoback.nl/2014/06/how-to-create-framework-independent-controllers/">Symfony2: How to create framework independent controllers?</a></p></li>
<li><p><a href="https://igor.io/2013/02/03/http-foundation-value.html">Symfony2: value of HttpFoundation</a></p></li>
<li><p><a href="https://igor.io/2013/03/31/stateless-services.html">Stateless services</a></p></li>
<li><p><a href="http://www.andresosinski.com/you-job-is-not-to-code.html">Your Job is not to code</a> &ndash; different perspective &ndash; <a href="http://joshsymonds.com/blog/2014/06/15/your-job-is-to-code/">Your job is to code</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="https://julo.ch/blog/docker-dev-environment/">Docker for your dev environment</a></p></li>
<li><p><a href="http://thenextweb.com/dd/2014/06/17/7-web-design-disasters-drive-people-crazy/">7 Web design disasters that drive people crazy</a></p></li>
<li><p><a href="http://stedolan.github.io/jq/">Lightweight and flexible command-line JSON Processor</a></p></li>
<li><p><a href="http://ember.vicramon.com/">Ember Tutorial</a></p></li>
<li><p><a href="http://www.daemonology.net/papers/crypto1hr.pdf">Everything you need to know about cryptography in one hour</a></p></li>
<li><p><a href="http://t.co/GreAnQwaI7">MockServer, effortless API mocking library in Nodejs</a></p></li>
<li><p><a href="http://buff.ly/1hUhRo6">Tesla drops all their patents</a></p></li>
<li><p><a href="http://docs.deis.io/en/latest/understanding_deis/architecture/">Deis: Your PaaS, your rules.</a></p></li>
<li><p><a href="http://www.centurylinklabs.com/flynn-vs-deis-the-tale-of-two-docker-micro-paas-technologies/">Flynn Vs Deis, two Docker-related open source projects compared</a></p></li>
<li><p><a href="http://www.centurylinklabs.com/top-10-open-source-docker-developer-tools/">Top 10 Docker Tools</a></p></li>
<li><p><a href="https://coreos.com/">CoreOs: Linux for Massive Server Deployments</a></p></li>
<li><p><a href="http://www.clearlytech.com/2014/01/04/12-factor-apps-plain-english/">12 factors apps in plain english</a></p></li>
<li><p><a href="https://cipherli.st/">A nice set of strong cipher settings for Apache, Nginx and Lighttpd. A good case study.</a></p></li>
<li><p><a href="https://github.com/mickey/checkzilla">Checkzilla, a simple tool for letting you know about out-of-date software versions</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MockServer, Effortless API Mocking Library in Node Js]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/13/mockserver-effortless-api-mocking-library-in-node-js/"/>
    <updated>2014-06-13T04:22:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/13/mockserver-effortless-api-mocking-library-in-node-js</id>
    <content type="html"><![CDATA[<p>Namshi Tech Team is happy to roll-out a new node-based library!</p>

<p>We present you <a href="https://github.com/namshi/mockserver">MockServer</a>, a library that allows you to easily mock your APIs&#8217; plain HTTP responses.</p>

<!-- more -->


<p>The main benefit of this library is to allow developers to focus on what is important to them, and in this case,
<code>mockserver</code> allows front-end developers to focus their efforts on creating awesome front-end clients without having to worry about the
availability of a complete and running API.</p>

<p>The use of this library can be appreciated by developers following a <a href="http://www.frontendfirst.com/">Front-End First</a>
methodology where development efforts initially focus on front-end clients rather than the back-end structure and tools.
Front-end first suggests that front-end developers have their mocked servers return expected or anticipated HTTP responses
based on the available specification instead of making an actual call to the API.
Another benefit is to allow development for both front-end and back-end in parallel.</p>

<p>In short, this library basically removes the dependency that the front-end development requires from the backend.</p>

<h2>Usage</h2>

<p>Create an empty directory inside your project, <code>mkdir api</code></p>

<p>To start mocking your HTTP responses, you will need to have a sub-directory were all your mocks shall reside. In order to do so,
in your <code>api</code> folder run <code>mkdir mocks</code> and that&rsquo;s where all plain text HTTP responses will reside.</p>

<p>Inside your <code>api</code> directory, run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install mockserver</span></code></pre></td></tr></table></div></figure>


<p>Create a new js file, say, <code>api.js</code> that has the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">http</span>       <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">mockserver</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;mockserver&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="nx">mockserver</span><span class="p">(</span><span class="s1">&#39;./mocks&#39;</span><span class="p">)).</span><span class="nx">listen</span><span class="p">(</span><span class="s1">&#39;9001&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it! Now navigate from your terminal to the <code>api</code> directory and run <code>node api.js</code>. This will create a node server that
listens to port <code>9001</code>.</p>

<p>Now, you should point your front-end client to <code>http://localhost:9001</code> instead of the actual api url.</p>

<h2>Mocks</h2>

<p>Now, your node server is running and your client can start making requests and getting back mocked HTTP responses.</p>

<p>How do you create the mocks?</p>

<p>Each request relative url path, HTTP method combination resides in a separate text file inside your mocks folder.
The naming of those files goes as follows: <code>path_METHOD</code>, <code>path</code> is the relative url path without any slashes, i.e, <code>/test</code>
should be <code>test</code> and <code>METHOD</code> is the upper-cased HTTP method (<code>GET</code>). The extension for the files should be <code>.mock</code>.
The complete file name is: <code>test_GET.mock</code>.</p>

<p>The contents of the mocked file should be a valid HTTP response text, as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">HTTP</span><span class="o">/</span><span class="mf">1.1</span> <span class="mi">200</span> <span class="nx">OK</span>
</span><span class='line'><span class="nx">Content</span><span class="o">-</span><span class="nx">Type</span><span class="o">:</span> <span class="nx">text</span><span class="o">/</span><span class="nx">html</span><span class="p">;</span> <span class="nx">charset</span><span class="o">=</span><span class="nx">utf</span><span class="o">-</span><span class="mi">8</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;&lt;</span><span class="nx">body</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="nx">World</span><span class="o">&lt;</span><span class="err">/body&gt;&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, whenever your client requests <code>http://localhost:9001/test</code>, <code>mockserver</code> will return that plain HTTP response you defined
in <code>test_GET.mock</code>.</p>

<h2>Header Variation</h2>

<p>Mockserver also supports different responses for the the same request path, method pair. You can make use of this feature by manually setting a
<code>mockserver-variation</code> header in your requests. The value of this header shall be appended to the mocked file name as follows: <code>path_METHOD_variation</code>.</p>

<p>Here is where you are able to handle various server HTTP responses for your request (200, 400, 500, 403, etc..).
Simply set <code>mockserver-variation</code> to <code>500</code> and the file from our previous example should be named <code>test_GET_500.mock</code>.</p>

<h2>Multi-level URLs</h2>

<p>If you are wondering how to mock HTTP responses for a multi-level URL like <code>http://localhost:9001/test1/test2</code> here is how to do it:</p>

<ul>
<li>Inside your <code>mocks</code> directory, run <code>mkdir test1</code></li>
<li><code>cd test1</code> and <code>touch test2.mock</code></li>
<li>Insert your raw HTTP response text in <code>test2.mock</code></li>
</ul>


<h2>Conclusion</h2>

<p>Although simple and straight forward, the idea behind <code>mockserver</code> is quite powerful. It is mostly suited for a Front-end First methodology, some of the
benefits include parallel front-end and back-end development and the decoupling of the Front-end and back-end during the development phase.</p>

<p>It would be great if you can take the time to try it out and let us know what you think!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #42]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/12/newsletter-number-42/"/>
    <updated>2014-06-12T12:03:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/12/newsletter-number-42</id>
    <content type="html"><![CDATA[<p><strong>techThursday is here folks!</strong></p>

<p>Wanna join us? We are still hiring!
We have cookies, #Symfony2, #nodejs, #AngularJS, #redis, #rabbitmq and coding challenges for you: <a href="http://buff.ly/1oyuSUK">http://buff.ly/1oyuSUK</a></p>

<ul>
<li><p><a href="http://serverspec.org">Serverspec: write rspec for your servers</a></p></li>
<li><p><a href="https://wiki.php.net/rfc/uniform_variable_syntax">PHP: rfc on uniform variable syntax</a></p></li>
<li><p><a href="https://github.com/r7kamura/jsonism">Jsonism, generate http clients from a json schema</a></p></li>
<li><p><a href="https://devopsu.com/blog/docker-misconceptions">Docker Misconceptions</a></p></li>
<li><p><a href="http://addyosmani.com/blog/automating-web-performance-measurement-with-psi-for-node/">Automating Web Performance Measurement With PSI For Node</a></p></li>
<li><p><a href="http://jsnice.org/">Jsnice statical renaming, type inference and deobfuscation</a></p></li>
<li><p><a href="https://tessel.io/">Tessel: hardware development for software developers (javascript and node)</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://www.smashingmagazine.com/2014/06/11/building-with-gulp/">Building with Gulp &ndash; Bonus Browser Sync</a></p></li>
<li><p><a href="http://www.leaseweblabs.com/2013/04/symfony2-consistent-routing/">Symfony2 consistent routing</a></p></li>
<li><p><a href="http://www.entrepreneur.com/article/234492">7 Reasons to Ditch the Corporate World for a Career at a Startup</a></p></li>
<li><p><a href="http://www.phoronix.com/scan.php?page=news_item&amp;px=MTcxNjU">Civilization 5 is finally released for linux platform</a></p></li>
<li><p><a href="http://www.allthingsdistributed.com/2008/12/eventually_consistent.html">Very good read on distributed systems/databases</a></p></li>
<li><p><a href="https://github.com/krakjoe/jitfu">Create (and evaluate) native JIT code in PHP</a></p></li>
<li><p><a href="http://jacquesmattheij.com/the-several-million-dollar-bug">The Several Million Dollar Bug</a></p></li>
<li><p><a href="http://blog.newrelic.com/2014/06/03/10-secrets-learned-software-engineering-degree-probably-didnt/?utm_source=Leanstack+Weekly&amp;utm_campaign=7b735e78b9-Leanstack_Weekly_54&amp;utm_medium=email&amp;utm_term=0_2911f8fd09-7b735e78b9-341766961">10 Secrets You Should Have Learned With Your Software Engineering Degree &ndash; But Probably Didn’t</a></p></li>
<li><p><a href="https://www.gitlab.com/">Open Source, Self Hosted, Git Management Software</a></p></li>
<li><p><a href="http://www.landsnail.com/apple/local/steve-jobs-resume/Resume.html">Steve Jobs Resume</a></p></li>
<li><p><a href="http://www.broken-links.com/2014/06/09/voyeurism-mutation-object-observers">Mutation and Object Observers for Watching DOM and JS Objects Changes</a></p></li>
<li><p><a href="http://css-tricks.com/using-encapsulation-semantic-markup/">Using Encapsulation for Semantic Markup</a></p></li>
<li><p><a href="http://dev.opera.com/articles/css-will-change-property/">Everything You Need to Know About the CSS will-change Property</a></p></li>
<li><p><a href="http://intercoolerjs.org/">intercooler.js: add AJAX to your web application using simple, declarative HTML attributes</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wanna join us? We have cookies, Symfony2, Node, AngularJS and coding challenges for you!]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/08/wanna-join-us-we-have-cookies-symfony2-node-angularjs-and-coding-challenges-for-you/"/>
    <updated>2014-06-08T11:44:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/08/wanna-join-us-we-have-cookies-symfony2-node-angularjs-and-coding-challenges-for-you</id>
    <content type="html"><![CDATA[<p>A quick update from the trenches: for the past months
we&rsquo;ve been beefing our team up and by doing so we
realized that some good coding challenges are
almost a must.</p>

<p>We just put all the challenges we&rsquo;ve used and are gonna
be using on a <a href="https://github.com/namshi/coding-challenges">github repo for you to check them out</a>:
feel free to solve them, fork them, improve them, do anything
with them! :)</p>

<p>We are currently hiring <a href="https://github.com/namshi/coding-challenges/blob/master/senior-api-engineer.md">senior API engineers</a>, <a href="https://github.com/namshi/coding-challenges/blob/master/senior-frontend-engineer.md">senior frontend
engineers</a> and are looking to bootstrap our mobile team
with a <a href="https://github.com/namshi/coding-challenges/blob/master/lead-mobile-engineer.md">Lead Mobile Engineer</a>:
got leads? Got skills? Reach out and let&rsquo;s do Service-Oriented Architectures together!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reconfig: declarative JavaScript configurations]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/07/reconfi-declarative-javascript-configurations/"/>
    <updated>2014-06-07T00:50:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/07/reconfi-declarative-javascript-configurations</id>
    <content type="html"><![CDATA[<p>We recently published a new library that let&rsquo;s you
deal with configurations, in JavaScript, in a very
elegant way.</p>

<p>The library is called <a href="https://github.com/namshi/reconfig">Reconfig</a> and it&rsquo;s available
through <a href="https://www.npmjs.org/package/reconfig">NPM</a> (if you need on the browser we highly
recommend <a href="http://browserify.org/">browserify</a>): it&rsquo;s really
small and simple, and thought to keep your
configuration as elegant, simple and declarative as possible.</p>

<!-- more -->


<p>With reconfig you can do stuff like:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">reconfig</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;reconfig&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">config</span> <span class="o">=</span>  <span class="k">new</span> <span class="nx">reconfig</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">greet</span><span class="o">:</span> <span class="s1">&#39;Hello :who!&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">sayhi</span><span class="o">:</span> <span class="s1">&#39;{{ greet }}&#39;</span>
</span><span class='line'>    <span class="nx">countries</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">uae</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">population</span><span class="o">:</span> <span class="s1">&#39;2M&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">nationalDay</span><span class="o">:</span> <span class="s1">&#39;December 2nd&#39;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="c1">// ...</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// Retrieve a deep config value</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;countries.uae.nationalDay&#39;</span><span class="p">);</span> <span class="c1">// December, 2nd</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Pass parameters to the configuration</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;greet&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">who</span><span class="o">:</span> <span class="s1">&#39;John&#39;</span><span class="p">});</span> <span class="c1">// Hello, John!</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Reference other configuration parameters</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;sayhi&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">who</span><span class="o">:</span> <span class="s1">&#39;John&#39;</span><span class="p">});</span> <span class="c1">// Hello, John!</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Fallback values</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;something&#39;</span><span class="p">,</span> <span class="p">{},</span> <span class="s1">&#39;invalid&#39;</span><span class="p">);</span> <span class="c1">// invalid</span>
</span></code></pre></td></tr></table></div></figure>


<p>We&rsquo;re probably gonna look into porting the same to
PHP (another big player in our stack) so&hellip;stay tuned!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #41]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/05/newsletter-number-41/"/>
    <updated>2014-06-05T12:03:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/05/newsletter-number-41</id>
    <content type="html"><![CDATA[<p>Hi fellas, it&rsquo;s #techThursday an here we are with the usual list of interesting topics and resources for the upcoming weekend!</p>

<p>We publish several blog posts in the latest weeks, to be up-to-date just follow us on <a href="http://twitter.com/TechNamshi">twitter</a>.</p>

<p><strong>And you know what? We are hiring</strong> : <strong><a href="http://buff.ly/1pP7x0n">we are looking for a Lead Mobile Developer!</a></strong></p>

<!-- more -->


<ul>
<li><p><a href="http://buff.ly/1pP7x0n">Like Android &amp; iOS? Let&rsquo;s revolutionize shopping in the Middle East! We are hiring a mobile lead developer</a></p></li>
<li><p><a href="http://buff.ly/1nfhXWK">Developers don&rsquo;t write code, they write essays</a></p></li>
<li><p><a href="http://buff.ly/UbTMiq">How We Use Docker To Continuously Deliver Microservices</a></p></li>
<li><p><a href="https://github.com/boot2docker/boot2docker">Boot2Docker: a lightweight Linux distribution made specifically to run Docker containers. Even on you OS X or Windows machine!</a></p></li>
<li><p><a href="http://buff.ly/1h7heav">Meta-programming in JavaScript Using Proxies</a></p></li>
<li><p><a href="http://buff.ly/1ktHCpK">New, Cost-Effective Memory-Optimized DB Instances for Amazon RDS</a></p></li>
<li><p><a href="http://buff.ly/1hJJtqK">PHP 5.6.0beta3 Released</a></p></li>
<li><p><a href="http://buff.ly/RLoUTL">Konzole, a very simple tool to create console apps for #nodejs</a></p></li>
<li><p><a href="http://nondot.org/sabre/">A little of background to how Swift (the new programming language by Apple) development was started</a></p></li>
<li><p><a href="https://github.com/fullstackio/FlappySwift">Swift implementation of flappy bird, on github</a></p></li>
<li><p><a href="http://aosabook.org/en/llvm.html">The LLVM architecture</a></p></li>
<li><p><a href="http://www.trustedreviews.com/opinions/samsung-tizen-os-features">Samsung Tizen OS: 6 Things You Need To Know</a></p></li>
<li><p><a href="http://www.wired.com/2014/06/contiki/">Out in the open: the little-known Open Source OS that rules the Internet of things</a></p></li>
<li><p><a href="http://http://gaudi.io/">Setup of isolated and decoupled dev environments</a></p></li>
<li><p><a href="http://matt.aimonetti.net/posts/2013/08/27/what-technology-should-my-startup-use/">What Technology Should My Startup Use?</a></p></li>
<li><p><a href="http://leanstack.io/categories">Categorized list of great web application/service including companies using it</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Developers don't write code, they write essays]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/04/developers-dont-write-code-they-write-essays/"/>
    <updated>2014-06-04T21:07:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/04/developers-dont-write-code-they-write-essays</id>
    <content type="html"><![CDATA[<p>I am always amazed by the quantity of errors I make,
on a daily basis, when writing some code: it&rsquo;s true that&rsquo;s
not my <strong>primary</strong> job, but at the same
time it always feels painful to find bugs or edge cases.</p>

<p>But one of the things I&rsquo;m usually good at it&rsquo;s trying
to keep things as universal, simple and self-explanatory
as possible, as I&rsquo;ve learnt, so far, that the worst enemy
of my code is <strong>me in 6 months</strong>.</p>

<!-- more -->


<p>Today, for example, I was discussing with <a href="http://tech.namshi.com/blog/2014/05/26/welcome-lucio/">Lucio</a>
how to handle a list of errors: suppose that the user
performs an action that generates a bunch of errors, and that
you have an error handler that needs to deal with all of them.</p>

<p>The error handler might receive a list of these errors, process
them one by one and then let other guys take the stage: a common
solution would be to feed the handler the list of errors and let it
pop them from the list as soon as he&rsquo;s  <em>handled</em> them.</p>

<figure class='code'><figcaption><span>Some pseudo code</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ErrorHandler</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">property</span> <span class="n">queue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">addError</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">queue</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">error</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">handle</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">foreach</span> <span class="p">(</span><span class="n">error</span> <span class="k">in</span> <span class="n">queue</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">doStuff</span><span class="p">(</span><span class="n">error</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nothing exceptional with the pseudo-code above, but we were wondering
(as our piece of code is a bit more complex) how to name the list of
errors that the handler deals with to make it a bit more declarative.</p>

<p>Since the error handler acts as a <a href="http://en.wikipedia.org/wiki/FIFO">FIFO</a>
it felt natural, for Lucio, call this a <strong>queue</strong>. I suggested <strong>stack</strong>
but upon thinking about it we agreed that since a stack act as
<a href="http://en.wikipedia.org/wiki/LIFO_(computing">LIFO</a> it wasn&rsquo;t the best idea.</p>

<p><a href="http://www.cs.cmu.edu/~adamchik/15-121/lectures/Stacks%20and%20Queues/Stacks%20and%20Queues.html">Things like this</a> might sound silly, but they <strong>extremely important</strong>
when you work with other ten people on a complex domain that
you are trying to keep as simple (and real) as possible.</p>

<p>We often forget that translating concepts into working code is our
main duty, and by doing so we need to keep things as clear / clean as possible:
how many times did you hear <em>&ldquo;Oh that guy wrote it, he knows how it works, ask him&rdquo;</em>?
I cry everytime I hear that.</p>

<p>When you are assigned a task, first think of the simplest and most exhaustive
solution, then write the code: your job is not measured by lines of code, but by
working software, which means maintainable, decoupled, easy to understand, (ultimately)
beautiful code.</p>

<p>What is the difference between an essay and some code? Ideally there is none:</p>

<ul>
<li>you explain / implement a concept / feature</li>
<li>your artifact needs to be understandable</li>
<li>it targets 2 audiences

<ul>
<li>a technical one, which needs to be able to understand it in depth</li>
<li>a more general one, which needs to grasp the main concepts</li>
</ul>
</li>
</ul>


<p>Actually, there is <strong>one</strong> difference between essays and software development: the
language they&rsquo;re written in.</p>

<p>But they all need to be self-explanatory, they
all need to nail the problem without the need to dig too deep into
the explanation, they all need to get straight to the point, making
things explicit rather than implicit.</p>

<p>Keep writing essays, no matter if in C, JavaScript or English. Just avoid COBOL.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye Muhammad!]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/03/goobye-muhammad/"/>
    <updated>2014-06-03T22:46:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/03/goobye-muhammad</id>
    <content type="html"><![CDATA[<p><img class="left team" src="http://tech.namshi.com/images/riaz.jpeg" title="Muhammad Riaz" ></p>

<p>As much as we hate to see people leaving, I think
it&rsquo;s a good thing to waive the nostalgic feelings
and celebrate who has decided to move on: for better
or for worse, each and everyone in our team has played
a key role in evolving to what I call <em>&ldquo;The tech family&rdquo;</em>.</p>

<p>I must admit that I&rsquo;m a bit late with saying goodbye to
<a href="https://ae.linkedin.com/pub/muhammad-riaz/10/777/414">Muhammad</a>, but I eventually wanted to do this as I believe
his mermerizing persona, the laugh, the commitment that
he showed in his 2-year tenure are second to none.</p>

<!-- more -->


<p>Muhammad has joined us even before I got to Dubai,
and left us after core contributions to our
architecture: from rushing to fix as many bugs as possible
to putting all he had in re-architecting core
components of our stack, like our main API and
integrations with payment providers: for example,
he&rsquo;s been crucial in implementing 3D-secure
authentication in our
<a href="https://github.com/namshi/innovate">namshi/innovate</a> library.</p>

<p>Last we heard is that he would have rushed to Europe
in order to join an exciting startup.</p>

<p>Bring your <a href="http://www.stylehoster.com/lpc/uploads/2014/01/Latest-Salwar-Kameez-Designs-2014-For-Pakistani-Men.gif">Kameez</a> with you man,
and remember you still have some brothers in Dubai!</p>

<p>Aye!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Like Android and iOS? Let's change shopping in the Middle East together!]]></title>
    <link href="http://tech.namshi.com/blog/2014/06/03/like-android-and-ios-lets-change-shopping-in-the-middle-east-together/"/>
    <updated>2014-06-03T16:42:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/06/03/like-android-and-ios-lets-change-shopping-in-the-middle-east-together</id>
    <content type="html"><![CDATA[<p>Do you like Java? Ok, I possibly started from the wrongest question.</p>

<p>Restart.</p>

<p>Do you like Android? (sounds much better!) And what about iOS? Tablets?
Mobile devices in general? If so, come over and let&rsquo;s change the way
people shop in the Middle East.</p>

<p>We are looking for a <strong>Lead Mobile Developer</strong>, someone who can get his hands
dirty with both of the main platforms, and teach others how to do it: we&rsquo;d
like you to bring in your expertise and help kicking off our mobile
development team.</p>

<!-- more -->


<h2>What do we need?</h2>

<p>Our need is to kickoff an internal development team, which could even be split by
iOS and Android, and to do so we would need to make a first, very good hire and
find a lead who can drive all the way to success.</p>

<p>How will your typical day look like? You will go over a <a href="https://gist.github.com">gist</a> which has the specs for
a feature together with the other leads, wrap up a bugfix for the next release,
check one of the pull requests submitted by another team member and have
<a href="http://upload.wikimedia.org/wikipedia/commons/d/d4/Shawarma_ad_Istanbul_(01.10.2008).JPG">lotsa shawarma</a> for lunch.</p>

<p>As general rules, we would like:</p>

<ul>
<li>someone who speaks both <strong>Android and iOS</strong> (if you know only one of them but think you deserve a position, talk to us and we&rsquo;d be very happy to hear your point)</li>
<li>a few years of proficient <strong>development of mobile applications</strong>, possibly being a leader of a small/mid-sized team</li>
<li>knowledge of the <strong>latest trend</strong> in your technical sector (you tell us if <a href="http://www.omgchrome.com/android-webview-auto-update-future/">android auto-updates its webview component</a>, not the other way round :) as well as suggesting tools like <a href="http://hockeyapp.net/features/">Hockey</a>)</li>
<li><strong>Object-Oriented design</strong>: sounds boring but we don&rsquo;t limit ourselves to MVC, we actually need you to <a href="http://www.slideshare.net/odino/dont-screw-it-up-how-to-build-durable-web-apis-phpday-2014-in-verona-ita">consume our APIs and get the most out of them</a></li>
<li>it would be a plus to get someone who is passionate about <strong>OSS</strong> and would like to release some of our stuff after polishing them for the public</li>
</ul>


<h2>What do we offer?</h2>

<ul>
<li>a good salary, we don&rsquo;t want to hire people who feel they&rsquo;ve been underpaid</li>
<li>SPDY, HTTP APIs and a Service-Oriented Architecture</li>
<li>a <a href="https://www.google.com/maps/dir/First+Gulf+Bank+Metro+Station+1+-+Sheikh+Zayed+Rd+-+Dubai+-+United+Arab+Emirates/More+Cafe+Gold+%26+Diamond+Park+-+Sheikh+Zayed+Rd+-+Dubai+-+United+Arab+Emirates/@25.1264065,55.2068206,18z/data=!3m1!4b1!4m14!4m13!1m5!1m1!1s0x3e5f6bc621973f29:0x18a89384f349bdf6!2m2!1d55.207756!2d25.126699!1m5!1m1!1s0x3e5f6bc6122edfe3:0x435be27ccd3d1564!2m2!1d55.208316!2d25.126114!3e2">1-minute-walk</a> from the metro to the office</li>
<li>a <a href="http://tech.namshi.com/team">great team</a></li>
<li>you <strong>will and won&rsquo;t</strong> be alone: our team is made of ~15 software engineers and we share best practices at the architectual / software design level,
but don&rsquo;t have a way to re-invent the current team members into mobile hackers</li>
<li>growth, as mobile is getting bigger and bigger (for us and for the ecommerce market in general): we expect the mobile
development team to be growing as months will go by</li>
<li>a company which is standing on the <a href="http://www.rocket-internet.de/">shoulder of giants</a></li>
<li>the <em>&ldquo;10th our breakpoint&rdquo;</em>: if you work for 10 hours then have a break, order food and we will reimburse it</li>
<li>working with <a href="http://instagram.com/p/gpSOCenpPI/">these two guys</a></li>
</ul>


<h2>So what?</h2>

<p>Simply drop an email at <code>alessandro.nadalin@namshi.com</code> and let&rsquo;s make it real! Need more infos? Check <a href="http://tech.namshi.com/join-us">this</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Newsletter #40]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/29/newsletter-number-40/"/>
    <updated>2014-05-29T12:45:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/29/newsletter-number-40</id>
    <content type="html"><![CDATA[<p><strong>TA-DA! TechThursday</strong> newsletter is here!</p>

<ul>
<li><p><a href="http://www.html5rocks.com/en/tutorials/es7/observe">Object.observe will change everything you know about data binding. It&rsquo;s the future.</a></p></li>
<li><p><a href="http://beta.slashdot.org/story/202599">PHP Next Generation</a></p></li>
<li><p><strong>SOLID</strong>: Single Responsibility (SRP), Open/Close, Liskov&rsquo;s Substitution, Interface Segregation, and Dependency Inversion.<br />
  Five principles that should guide you every time you write code.
  <a href="http://code.tutsplus.com/tutorials/solid-part-1-the-single-responsibility-principle--net-36074">Part#1</a>,
  <a href="http://code.tutsplus.com/tutorials/solid-part-2-the-openclosed-principle--net-36600">Part#2</a>,
  <a href="http://code.tutsplus.com/tutorials/solid-part-3-liskov-substitution-interface-segregation-principles--net-36710">Part#3</a>,
  <a href="http://code.tutsplus.com/tutorials/solid-part-4-the-dependency-inversion-principle--net-36872">Part#4</a></p></li>
</ul>


<!-- more -->


<ul>
<li><p><a href="http://www.infoworld.com/slideshow/153868/20-cool-things-you-can-do-raspberry-pi-243042">20 cool things you can do with a Raspberry Pi</a></p></li>
<li><p><a href="http://www.pcworld.com/article/2159160/mit-tackled-earths-atmosphere-to-give-the-moon-broadband.html">MIT tackled Earth&rsquo;s atmosphere to give the moon broadband</a></p></li>
<li><p><a href="http://unix.stackexchange.com/questions/8916/when-should-i-not-kill-9-a-process">When should I not kill -9 a process?</a></p></li>
<li><p><a href="http://blog.workhere.io/googlebots-recent-improvements-might-revolutionize-web-development/">Google Bot’s Recent improvements might revolutionize web development</a></p></li>
<li><p><a href="https://github.com/mapmeld/gitjk#gitjk">Undo what you just did in Git</a></p></li>
<li><p><a href="http://wildlyinaccurate.com/a-hackers-guide-to-git">A hacker’s Guide to Git</a></p></li>
<li><p><a href="http://www.bennadel.com/blog/2631-workflow-differences-between-scope-watch-and-attributes-observe-in-angularjs.htm">Understanding the difference between $scope.$watch() and Attributes.$observe() in AngularJS</a></p></li>
<li><p><a href="http://www.20thingsilearned.com/en-US">20 Things I learned about browser and web: An interactive book by Google</a></p></li>
<li><p><a href="http://www.stevesouders.com/blog/2014/02/11/measuring-localstorage-performance/">Measuring the performance of local storage</a></p></li>
<li><p><a href="http://www.snopes.com/music/artists/vanhalen.asp">Van Halen&rsquo;s smart contract clauses</a></p></li>
<li><p><a href="https://aws.amazon.com/blogs/aws/protect-your-data-with-new-ebs-encryption">AWS introduces additional EBS encryption</a></p></li>
<li><p><a href="http://www.polygon.com/features/2014/5/13/5542406/qatar-girnaas-giddam">Making games in Qatar</a></p></li>
<li><p><a href="http://loopback.io">LoopBack, a new NodeJS framework</a></p></li>
<li><p><a href="http://gizmodo.com/5903827/the-humble-origins-of-the-html-blink-tag">How was the HTML blink tag born?</a></p></li>
<li><p><a href="https://github.com/cargomedia/vagrant-phpstorm-tunnel">Vagrant PhpStorm Tunnel, a cool vagrant plugin that it will forward all php calls to php in the Vagrant VM</a></p></li>
<li><p><a href="https://news.ycombinator.com/item?id=7806908">The new iteration of PHP (read the comments)</a> (for more drama you can read <a href="http://grokbase.com/t/php/php-internals/1455aesx7r/phpng-%04refactored-php-engine-with-big-performance-improvement/nested/page/3">internals discussion on PHPNG</a>)</p></li>
<li><p><a href="http://code.tutsplus.com/series/data-structures-succinctly-part-1--cms-551">Data Structures Succinctly ebook</a></p></li>
<li><p><a href="http://code.tutsplus.com/tutorials/the-repository-design-pattern--net-35804">The Repository Design Pattern (PHP)</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Welcome Nikita!]]></title>
    <link href="http://tech.namshi.com/blog/2014/05/26/welcome-nikita/"/>
    <updated>2014-05-26T23:40:00+04:00</updated>
    <id>http://tech.namshi.com/blog/2014/05/26/welcome-nikita</id>
    <content type="html"><![CDATA[<p><img class="team left" src="http://tech.namshi.com/images/nikita.png"></p>

<p>Yesterday we got some cold breeze from Russia, which
is never bad considered that Dubai is getting ready
for the summer!</p>

<p>Nikita, one of our new API engineers, has joined the
team to feed our architecture with energy, good software engineering
and a ton of rock-solid PHP development!</p>

<p>You can get to know Nikita by checking out his <a href="https://github.com/nikita2206">github profile</a>,
a place where he likes to fork the official PHP repository
to fix bugs on the language itself (kudos!) or&hellip;by starting
to check our <a href="https://github.com/namshi">github page</a> out more often,
as we&rsquo;re gonna see some more open-source PHP libraries over there!</p>
]]></content>
  </entry>
  
</feed>
